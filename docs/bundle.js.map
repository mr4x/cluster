{
  "version": 3,
  "sources": ["../node_modules/heap/lib/heap.js", "../node_modules/heap/index.js", "../node_modules/zdog/js/boilerplate.js", "../node_modules/zdog/js/canvas-renderer.js", "../node_modules/zdog/js/svg-renderer.js", "../node_modules/zdog/js/vector.js", "../node_modules/zdog/js/anchor.js", "../node_modules/zdog/js/dragger.js", "../node_modules/zdog/js/illustration.js", "../node_modules/zdog/js/path-command.js", "../node_modules/zdog/js/shape.js", "../node_modules/zdog/js/group.js", "../node_modules/zdog/js/rect.js", "../node_modules/zdog/js/rounded-rect.js", "../node_modules/zdog/js/ellipse.js", "../node_modules/zdog/js/polygon.js", "../node_modules/zdog/js/hemisphere.js", "../node_modules/zdog/js/cylinder.js", "../node_modules/zdog/js/cone.js", "../node_modules/zdog/js/box.js", "../node_modules/zdog/js/index.js", "../node_modules/roughjs/bundled/rough.esm.js", "../node_modules/ml-distance-euclidean/lib-es6/euclidean.js", "../node_modules/ml-distance-matrix/src/index.js", "../node_modules/is-any-array/src/index.js", "../node_modules/ml-array-max/lib-es6/index.js", "../node_modules/ml-array-min/lib-es6/index.js", "../node_modules/ml-array-rescale/lib-es6/index.js", "../node_modules/ml-matrix/src/inspect.js", "../node_modules/ml-matrix/src/mathOperations.js", "../node_modules/ml-matrix/src/util.js", "../node_modules/ml-matrix/src/stat.js", "../node_modules/ml-matrix/src/matrix.js", "../node_modules/ml-hclust/src/Cluster.js", "../node_modules/ml-hclust/src/agnes.js", "../src/utils.js", "../src/data.js", "../src/colors.js", "../src/kmeans.js", "../src/plot.js", "../src/forel.js", "../src/index.js"],
  "sourcesContent": ["// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n", "module.exports = require('./lib/heap');\n", "/*!\n * Zdog v1.1.2\n * Round, flat, designer-friendly pseudo-3D engine\n * Licensed MIT\n * https://zzz.dog\n * Copyright 2020 Metafizzy\n */\n\n/**\n * Boilerplate & utils\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    root.Zdog = factory();\n  }\n}( this, function factory() {\n\nvar Zdog = {};\n\nZdog.TAU = Math.PI * 2;\n\nZdog.extend = function( a, b ) {\n  for ( var prop in b ) {\n    a[ prop ] = b[ prop ];\n  }\n  return a;\n};\n\nZdog.lerp = function( a, b, alpha ) {\n  return ( b - a ) * alpha + a;\n};\n\nZdog.modulo = function( num, div ) {\n  return ( ( num % div ) + div ) % div;\n};\n\nvar powerMultipliers = {\n  2: function( a ) {\n    return a * a;\n  },\n  3: function( a ) {\n    return a * a * a;\n  },\n  4: function( a ) {\n    return a * a * a * a;\n  },\n  5: function( a ) {\n    return a * a * a * a * a;\n  },\n};\n\nZdog.easeInOut = function( alpha, power ) {\n  if ( power == 1 ) {\n    return alpha;\n  }\n  alpha = Math.max( 0, Math.min( 1, alpha ) );\n  var isFirstHalf = alpha < 0.5;\n  var slope = isFirstHalf ? alpha : 1 - alpha;\n  slope /= 0.5;\n  // make easing steeper with more multiples\n  var powerMultiplier = powerMultipliers[ power ] || powerMultipliers[2];\n  var curve = powerMultiplier( slope );\n  curve /= 2;\n  return isFirstHalf ? curve : 1 - curve;\n};\n\nreturn Zdog;\n\n}));\n", "/**\n * CanvasRenderer\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    root.Zdog.CanvasRenderer = factory();\n  }\n}( this, function factory() {\n\nvar CanvasRenderer = { isCanvas: true };\n\nCanvasRenderer.begin = function( ctx ) {\n  ctx.beginPath();\n};\n\nCanvasRenderer.move = function( ctx, elem, point ) {\n  ctx.moveTo( point.x, point.y );\n};\n\nCanvasRenderer.line = function( ctx, elem, point ) {\n  ctx.lineTo( point.x, point.y );\n};\n\nCanvasRenderer.bezier = function( ctx, elem, cp0, cp1, end ) {\n  ctx.bezierCurveTo( cp0.x, cp0.y, cp1.x, cp1.y, end.x, end.y );\n};\n\nCanvasRenderer.closePath = function( ctx ) {\n  ctx.closePath();\n};\n\nCanvasRenderer.setPath = function() {};\n\nCanvasRenderer.renderPath = function( ctx, elem, pathCommands, isClosed ) {\n  this.begin( ctx, elem );\n  pathCommands.forEach( function( command ) {\n    command.render( ctx, elem, CanvasRenderer );\n  });\n  if ( isClosed ) {\n    this.closePath( ctx, elem );\n  }\n};\n\nCanvasRenderer.stroke = function( ctx, elem, isStroke, color, lineWidth ) {\n  if ( !isStroke ) {\n    return;\n  }\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.stroke();\n};\n\nCanvasRenderer.fill = function( ctx, elem, isFill, color ) {\n  if ( !isFill ) {\n    return;\n  }\n  ctx.fillStyle = color;\n  ctx.fill();\n};\n\nCanvasRenderer.end = function() {};\n\nreturn CanvasRenderer;\n\n}));\n", "/**\n * SvgRenderer\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    root.Zdog.SvgRenderer = factory();\n  }\n}( this, function factory() {\n\nvar SvgRenderer = { isSvg: true };\n\n// round path coordinates to 3 decimals\nvar round = SvgRenderer.round = function( num ) {\n  return Math.round( num * 1000 ) / 1000;\n};\n\nfunction getPointString( point ) {\n  return round( point.x ) + ',' + round( point.y ) + ' ';\n}\n\nSvgRenderer.begin = function() {};\n\nSvgRenderer.move = function( svg, elem, point ) {\n  return 'M' + getPointString( point );\n};\n\nSvgRenderer.line = function( svg, elem, point ) {\n  return 'L' + getPointString( point );\n};\n\nSvgRenderer.bezier = function( svg, elem, cp0, cp1, end ) {\n  return 'C' + getPointString( cp0 ) + getPointString( cp1 ) +\n    getPointString( end );\n};\n\nSvgRenderer.closePath = function(/* elem */) {\n  return 'Z';\n};\n\nSvgRenderer.setPath = function( svg, elem, pathValue ) {\n  elem.setAttribute( 'd', pathValue );\n};\n\nSvgRenderer.renderPath = function( svg, elem, pathCommands, isClosed ) {\n  var pathValue = '';\n  pathCommands.forEach( function( command ) {\n    pathValue += command.render( svg, elem, SvgRenderer );\n  });\n  if ( isClosed ) {\n    pathValue += this.closePath( svg, elem );\n  }\n  this.setPath( svg, elem, pathValue );\n};\n\nSvgRenderer.stroke = function( svg, elem, isStroke, color, lineWidth ) {\n  if ( !isStroke ) {\n    return;\n  }\n  elem.setAttribute( 'stroke', color );\n  elem.setAttribute( 'stroke-width', lineWidth );\n};\n\nSvgRenderer.fill = function( svg, elem, isFill, color ) {\n  var fillColor = isFill ? color : 'none';\n  elem.setAttribute( 'fill', fillColor );\n};\n\nSvgRenderer.end = function( svg, elem ) {\n  svg.appendChild( elem );\n};\n\nreturn SvgRenderer;\n\n}));\n", "/**\n * Vector\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./boilerplate') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Vector = factory( Zdog );\n  }\n\n}( this, function factory( utils ) {\n\nfunction Vector( position ) {\n  this.set( position );\n}\n\nvar TAU = utils.TAU;\n\n// 'pos' = 'position'\nVector.prototype.set = function( pos ) {\n  this.x = pos && pos.x || 0;\n  this.y = pos && pos.y || 0;\n  this.z = pos && pos.z || 0;\n  return this;\n};\n\n// set coordinates without sanitizing\n// vec.write({ y: 2 }) only sets y coord\nVector.prototype.write = function( pos ) {\n  if ( !pos ) {\n    return this;\n  }\n  this.x = pos.x != undefined ? pos.x : this.x;\n  this.y = pos.y != undefined ? pos.y : this.y;\n  this.z = pos.z != undefined ? pos.z : this.z;\n  return this;\n};\n\nVector.prototype.rotate = function( rotation ) {\n  if ( !rotation ) {\n    return;\n  }\n  this.rotateZ( rotation.z );\n  this.rotateY( rotation.y );\n  this.rotateX( rotation.x );\n  return this;\n};\n\nVector.prototype.rotateZ = function( angle ) {\n  rotateProperty( this, angle, 'x', 'y' );\n};\n\nVector.prototype.rotateX = function( angle ) {\n  rotateProperty( this, angle, 'y', 'z' );\n};\n\nVector.prototype.rotateY = function( angle ) {\n  rotateProperty( this, angle, 'x', 'z' );\n};\n\nfunction rotateProperty( vec, angle, propA, propB ) {\n  if ( !angle || angle % TAU === 0 ) {\n    return;\n  }\n  var cos = Math.cos( angle );\n  var sin = Math.sin( angle );\n  var a = vec[ propA ];\n  var b = vec[ propB ];\n  vec[ propA ] = a*cos - b*sin;\n  vec[ propB ] = b*cos + a*sin;\n}\n\nVector.prototype.isSame = function( pos ) {\n  if ( !pos ) {\n    return false;\n  }\n  return this.x === pos.x && this.y === pos.y && this.z === pos.z;\n};\n\nVector.prototype.add = function( pos ) {\n  if ( !pos ) {\n    return this;\n  }\n  this.x += pos.x || 0;\n  this.y += pos.y || 0;\n  this.z += pos.z || 0;\n  return this;\n};\n\nVector.prototype.subtract = function( pos ) {\n  if ( !pos ) {\n    return this;\n  }\n  this.x -= pos.x || 0;\n  this.y -= pos.y || 0;\n  this.z -= pos.z || 0;\n  return this;\n};\n\nVector.prototype.multiply = function( pos ) {\n  if ( pos == undefined ) {\n    return this;\n  }\n  // multiple all values by same number\n  if ( typeof pos == 'number' ) {\n    this.x *= pos;\n    this.y *= pos;\n    this.z *= pos;\n  } else {\n    // multiply object\n    this.x *= pos.x != undefined ? pos.x : 1;\n    this.y *= pos.y != undefined ? pos.y : 1;\n    this.z *= pos.z != undefined ? pos.z : 1;\n  }\n  return this;\n};\n\nVector.prototype.transform = function( translation, rotation, scale ) {\n  this.multiply( scale );\n  this.rotate( rotation );\n  this.add( translation );\n  return this;\n};\n\nVector.prototype.lerp = function( pos, alpha ) {\n  this.x = utils.lerp( this.x, pos.x || 0, alpha );\n  this.y = utils.lerp( this.y, pos.y || 0, alpha );\n  this.z = utils.lerp( this.z, pos.z || 0, alpha );\n  return this;\n};\n\nVector.prototype.magnitude = function() {\n  var sum = this.x*this.x + this.y*this.y + this.z*this.z;\n  return getMagnitudeSqrt( sum );\n};\n\nfunction getMagnitudeSqrt( sum ) {\n  // PERF: check if sum ~= 1 and skip sqrt\n  if ( Math.abs( sum - 1 ) < 0.00000001 ) {\n    return 1;\n  }\n  return Math.sqrt( sum );\n}\n\nVector.prototype.magnitude2d = function() {\n  var sum = this.x*this.x + this.y*this.y;\n  return getMagnitudeSqrt( sum );\n};\n\nVector.prototype.copy = function() {\n  return new Vector( this );\n};\n\nreturn Vector;\n\n}));\n", "/**\n * Anchor\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./boilerplate'), require('./vector'),\n        require('./canvas-renderer'), require('./svg-renderer') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Anchor = factory( Zdog, Zdog.Vector, Zdog.CanvasRenderer,\n        Zdog.SvgRenderer );\n  }\n}( this, function factory( utils, Vector, CanvasRenderer, SvgRenderer ) {\n\nvar TAU = utils.TAU;\nvar onePoint = { x: 1, y: 1, z: 1 };\n\nfunction Anchor( options ) {\n  this.create( options || {} );\n}\n\nAnchor.prototype.create = function( options ) {\n  this.children = [];\n  // set defaults & options\n  utils.extend( this, this.constructor.defaults );\n  this.setOptions( options );\n\n  // transform\n  this.translate = new Vector( options.translate );\n  this.rotate = new Vector( options.rotate );\n  this.scale = new Vector( onePoint ).multiply( this.scale );\n  // origin\n  this.origin = new Vector();\n  this.renderOrigin = new Vector();\n\n  if ( this.addTo ) {\n    this.addTo.addChild( this );\n  }\n};\n\nAnchor.defaults = {};\n\nAnchor.optionKeys = Object.keys( Anchor.defaults ).concat([\n  'rotate',\n  'translate',\n  'scale',\n  'addTo',\n]);\n\nAnchor.prototype.setOptions = function( options ) {\n  var optionKeys = this.constructor.optionKeys;\n\n  for ( var key in options ) {\n    if ( optionKeys.indexOf( key ) != -1 ) {\n      this[ key ] = options[ key ];\n    }\n  }\n};\n\nAnchor.prototype.addChild = function( shape ) {\n  if ( this.children.indexOf( shape ) != -1 ) {\n    return;\n  }\n  shape.remove(); // remove previous parent\n  shape.addTo = this; // keep parent reference\n  this.children.push( shape );\n};\n\nAnchor.prototype.removeChild = function( shape ) {\n  var index = this.children.indexOf( shape );\n  if ( index != -1 ) {\n    this.children.splice( index, 1 );\n  }\n};\n\nAnchor.prototype.remove = function() {\n  if ( this.addTo ) {\n    this.addTo.removeChild( this );\n  }\n};\n\n// ----- update ----- //\n\nAnchor.prototype.update = function() {\n  // update self\n  this.reset();\n  // update children\n  this.children.forEach( function( child ) {\n    child.update();\n  });\n  this.transform( this.translate, this.rotate, this.scale );\n};\n\nAnchor.prototype.reset = function() {\n  this.renderOrigin.set( this.origin );\n};\n\nAnchor.prototype.transform = function( translation, rotation, scale ) {\n  this.renderOrigin.transform( translation, rotation, scale );\n  // transform children\n  this.children.forEach( function( child ) {\n    child.transform( translation, rotation, scale );\n  });\n};\n\nAnchor.prototype.updateGraph = function() {\n  this.update();\n  this.updateFlatGraph();\n  this.flatGraph.forEach( function( item ) {\n    item.updateSortValue();\n  });\n  // z-sort\n  this.flatGraph.sort( Anchor.shapeSorter );\n};\n\nAnchor.shapeSorter = function( a, b ) {\n  return a.sortValue - b.sortValue;\n};\n\n// custom getter to check for flatGraph before using it\nObject.defineProperty( Anchor.prototype, 'flatGraph', {\n  get: function() {\n    if ( !this._flatGraph ) {\n      this.updateFlatGraph();\n    }\n    return this._flatGraph;\n  },\n  set: function( graph ) {\n    this._flatGraph = graph;\n  },\n});\n\nAnchor.prototype.updateFlatGraph = function() {\n  this.flatGraph = this.getFlatGraph();\n};\n\n// return Array of self & all child graph items\nAnchor.prototype.getFlatGraph = function() {\n  var flatGraph = [ this ];\n  return this.addChildFlatGraph( flatGraph );\n};\n\nAnchor.prototype.addChildFlatGraph = function( flatGraph ) {\n  this.children.forEach( function( child ) {\n    var childFlatGraph = child.getFlatGraph();\n    Array.prototype.push.apply( flatGraph, childFlatGraph );\n  });\n  return flatGraph;\n};\n\nAnchor.prototype.updateSortValue = function() {\n  this.sortValue = this.renderOrigin.z;\n};\n\n// ----- render ----- //\n\nAnchor.prototype.render = function() {};\n\n// TODO refactor out CanvasRenderer so its not a dependency within anchor.js\nAnchor.prototype.renderGraphCanvas = function( ctx ) {\n  if ( !ctx ) {\n    throw new Error( 'ctx is ' + ctx + '. ' +\n      'Canvas context required for render. Check .renderGraphCanvas( ctx ).' );\n  }\n  this.flatGraph.forEach( function( item ) {\n    item.render( ctx, CanvasRenderer );\n  });\n};\n\nAnchor.prototype.renderGraphSvg = function( svg ) {\n  if ( !svg ) {\n    throw new Error( 'svg is ' + svg + '. ' +\n      'SVG required for render. Check .renderGraphSvg( svg ).' );\n  }\n  this.flatGraph.forEach( function( item ) {\n    item.render( svg, SvgRenderer );\n  });\n};\n\n// ----- misc ----- //\n\nAnchor.prototype.copy = function( options ) {\n  // copy options\n  var itemOptions = {};\n  var optionKeys = this.constructor.optionKeys;\n  optionKeys.forEach( function( key ) {\n    itemOptions[ key ] = this[ key ];\n  }, this );\n  // add set options\n  utils.extend( itemOptions, options );\n  var ItemClass = this.constructor;\n  return new ItemClass( itemOptions );\n};\n\nAnchor.prototype.copyGraph = function( options ) {\n  var clone = this.copy( options );\n  this.children.forEach( function( child ) {\n    child.copyGraph({\n      addTo: clone,\n    });\n  });\n  return clone;\n};\n\nAnchor.prototype.normalizeRotate = function() {\n  this.rotate.x = utils.modulo( this.rotate.x, TAU );\n  this.rotate.y = utils.modulo( this.rotate.y, TAU );\n  this.rotate.z = utils.modulo( this.rotate.z, TAU );\n};\n\n// ----- subclass ----- //\n\nfunction getSubclass( Super ) {\n  return function( defaults ) {\n    // create constructor\n    function Item( options ) {\n      this.create( options || {} );\n    }\n\n    Item.prototype = Object.create( Super.prototype );\n    Item.prototype.constructor = Item;\n\n    Item.defaults = utils.extend( {}, Super.defaults );\n    utils.extend( Item.defaults, defaults );\n    // create optionKeys\n    Item.optionKeys = Super.optionKeys.slice(0);\n    // add defaults keys to optionKeys, dedupe\n    Object.keys( Item.defaults ).forEach( function( key ) {\n      if ( !Item.optionKeys.indexOf( key ) != 1 ) {\n        Item.optionKeys.push( key );\n      }\n    });\n\n    Item.subclass = getSubclass( Item );\n\n    return Item;\n  };\n}\n\nAnchor.subclass = getSubclass( Anchor );\n\nreturn Anchor;\n\n}));\n", "/**\n * Dragger\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    root.Zdog.Dragger = factory();\n  }\n}( this, function factory() {\n\n// quick & dirty drag event stuff\n// messes up if multiple pointers/touches\n\n// check for browser window #85\nvar hasWindow = typeof window != 'undefined';\n// event support, default to mouse events\nvar downEvent = 'mousedown';\nvar moveEvent = 'mousemove';\nvar upEvent = 'mouseup';\nif ( hasWindow ) {\n  if ( window.PointerEvent ) {\n    // PointerEvent, Chrome\n    downEvent = 'pointerdown';\n    moveEvent = 'pointermove';\n    upEvent = 'pointerup';\n  } else if ( 'ontouchstart' in window ) {\n    // Touch Events, iOS Safari\n    downEvent = 'touchstart';\n    moveEvent = 'touchmove';\n    upEvent = 'touchend';\n  }\n}\n\nfunction noop() {}\n\nfunction Dragger( options ) {\n  this.create( options || {} );\n}\n\nDragger.prototype.create = function( options ) {\n  this.onDragStart = options.onDragStart || noop;\n  this.onDragMove = options.onDragMove || noop;\n  this.onDragEnd = options.onDragEnd || noop;\n\n  this.bindDrag( options.startElement );\n};\n\nDragger.prototype.bindDrag = function( element ) {\n  element = this.getQueryElement( element );\n  if ( !element ) {\n    return;\n  }\n  // disable browser gestures #53\n  element.style.touchAction = 'none';\n  element.addEventListener( downEvent, this );\n};\n\nDragger.prototype.getQueryElement = function( element ) {\n  if ( typeof element == 'string' ) {\n    // with string, query selector\n    element = document.querySelector( element );\n  }\n  return element;\n};\n\nDragger.prototype.handleEvent = function( event ) {\n  var method = this[ 'on' + event.type ];\n  if ( method ) {\n    method.call( this, event );\n  }\n};\n\nDragger.prototype.onmousedown =\nDragger.prototype.onpointerdown = function( event ) {\n  this.dragStart( event, event );\n};\n\nDragger.prototype.ontouchstart = function( event ) {\n  this.dragStart( event, event.changedTouches[0] );\n};\n\nDragger.prototype.dragStart = function( event, pointer ) {\n  event.preventDefault();\n  this.dragStartX = pointer.pageX;\n  this.dragStartY = pointer.pageY;\n  if ( hasWindow ) {\n    window.addEventListener( moveEvent, this );\n    window.addEventListener( upEvent, this );\n  }\n  this.onDragStart( pointer );\n};\n\nDragger.prototype.ontouchmove = function( event ) {\n  // HACK, moved touch may not be first\n  this.dragMove( event, event.changedTouches[0] );\n};\n\nDragger.prototype.onmousemove =\nDragger.prototype.onpointermove = function( event ) {\n  this.dragMove( event, event );\n};\n\nDragger.prototype.dragMove = function( event, pointer ) {\n  event.preventDefault();\n  var moveX = pointer.pageX - this.dragStartX;\n  var moveY = pointer.pageY - this.dragStartY;\n  this.onDragMove( pointer, moveX, moveY );\n};\n\nDragger.prototype.onmouseup =\nDragger.prototype.onpointerup =\nDragger.prototype.ontouchend =\nDragger.prototype.dragEnd = function(/* event */) {\n  window.removeEventListener( moveEvent, this );\n  window.removeEventListener( upEvent, this );\n  this.onDragEnd();\n};\n\nreturn Dragger;\n\n}));\n", "/**\n * Illustration\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./boilerplate'), require('./anchor'),\n        require('./dragger') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Illustration = factory( Zdog, Zdog.Anchor, Zdog.Dragger );\n  }\n}( this, function factory( utils, Anchor, Dragger ) {\n\nfunction noop() {}\nvar TAU = utils.TAU;\n\nvar Illustration = Anchor.subclass({\n  element: undefined,\n  centered: true,\n  zoom: 1,\n  dragRotate: false,\n  resize: false,\n  onPrerender: noop,\n  onDragStart: noop,\n  onDragMove: noop,\n  onDragEnd: noop,\n  onResize: noop,\n});\n\nutils.extend( Illustration.prototype, Dragger.prototype );\n\nIllustration.prototype.create = function( options ) {\n  Anchor.prototype.create.call( this, options );\n  Dragger.prototype.create.call( this, options );\n  this.setElement( this.element );\n  this.setDragRotate( this.dragRotate );\n  this.setResize( this.resize );\n};\n\nIllustration.prototype.setElement = function( element ) {\n  element = this.getQueryElement( element );\n  if ( !element ) {\n    throw new Error( 'Zdog.Illustration element required. Set to ' + element );\n  }\n\n  var nodeName = element.nodeName.toLowerCase();\n  if ( nodeName == 'canvas' ) {\n    this.setCanvas( element );\n  } else if ( nodeName == 'svg' ) {\n    this.setSvg( element );\n  }\n};\n\nIllustration.prototype.setSize = function( width, height ) {\n  width = Math.round( width );\n  height = Math.round( height );\n  if ( this.isCanvas ) {\n    this.setSizeCanvas( width, height );\n  } else if ( this.isSvg ) {\n    this.setSizeSvg( width, height );\n  }\n};\n\nIllustration.prototype.setResize = function( resize ) {\n  this.resize = resize;\n  // create resize event listener\n  if ( !this.resizeListener ) {\n    this.resizeListener = this.onWindowResize.bind( this );\n  }\n  // add/remove event listener\n  if ( resize ) {\n    window.addEventListener( 'resize', this.resizeListener );\n    this.onWindowResize();\n  } else {\n    window.removeEventListener( 'resize', this.resizeListener );\n  }\n};\n\n// TODO debounce this?\nIllustration.prototype.onWindowResize = function() {\n  this.setMeasuredSize();\n  this.onResize( this.width, this.height );\n};\n\nIllustration.prototype.setMeasuredSize = function() {\n  var width, height;\n  var isFullscreen = this.resize == 'fullscreen';\n  if ( isFullscreen ) {\n    width = window.innerWidth;\n    height = window.innerHeight;\n  } else {\n    var rect = this.element.getBoundingClientRect();\n    width = rect.width;\n    height = rect.height;\n  }\n  this.setSize( width, height );\n};\n\n// ----- render ----- //\n\nIllustration.prototype.renderGraph = function( item ) {\n  if ( this.isCanvas ) {\n    this.renderGraphCanvas( item );\n  } else if ( this.isSvg ) {\n    this.renderGraphSvg( item );\n  }\n};\n\n// combo method\nIllustration.prototype.updateRenderGraph = function( item ) {\n  this.updateGraph();\n  this.renderGraph( item );\n};\n\n// ----- canvas ----- //\n\nIllustration.prototype.setCanvas = function( element ) {\n  this.element = element;\n  this.isCanvas = true;\n  // update related properties\n  this.ctx = this.element.getContext('2d');\n  // set initial size\n  this.setSizeCanvas( element.width, element.height );\n};\n\nIllustration.prototype.setSizeCanvas = function( width, height ) {\n  this.width = width;\n  this.height = height;\n  // up-rez for hi-DPI devices\n  var pixelRatio = this.pixelRatio = window.devicePixelRatio || 1;\n  this.element.width = this.canvasWidth = width * pixelRatio;\n  this.element.height = this.canvasHeight = height * pixelRatio;\n  var needsHighPixelRatioSizing = pixelRatio > 1 && !this.resize;\n  if ( needsHighPixelRatioSizing ) {\n    this.element.style.width = width + 'px';\n    this.element.style.height = height + 'px';\n  }\n};\n\nIllustration.prototype.renderGraphCanvas = function( item ) {\n  item = item || this;\n  this.prerenderCanvas();\n  Anchor.prototype.renderGraphCanvas.call( item, this.ctx );\n  this.postrenderCanvas();\n};\n\nIllustration.prototype.prerenderCanvas = function() {\n  var ctx = this.ctx;\n  ctx.lineCap = 'round';\n  ctx.lineJoin = 'round';\n  ctx.clearRect( 0, 0, this.canvasWidth, this.canvasHeight );\n  ctx.save();\n  if ( this.centered ) {\n    var centerX = this.width/2 * this.pixelRatio;\n    var centerY = this.height/2 * this.pixelRatio;\n    ctx.translate( centerX, centerY );\n  }\n  var scale = this.pixelRatio * this.zoom;\n  ctx.scale( scale, scale );\n  this.onPrerender( ctx );\n};\n\nIllustration.prototype.postrenderCanvas = function() {\n  this.ctx.restore();\n};\n\n// ----- svg ----- //\n\nIllustration.prototype.setSvg = function( element ) {\n  this.element = element;\n  this.isSvg = true;\n  this.pixelRatio = 1;\n  // set initial size from width & height attributes\n  var width = element.getAttribute('width');\n  var height = element.getAttribute('height');\n  this.setSizeSvg( width, height );\n};\n\nIllustration.prototype.setSizeSvg = function( width, height ) {\n  this.width = width;\n  this.height = height;\n  var viewWidth = width / this.zoom;\n  var viewHeight = height / this.zoom;\n  var viewX = this.centered ? -viewWidth/2 : 0;\n  var viewY = this.centered ? -viewHeight/2 : 0;\n  this.element.setAttribute( 'viewBox', viewX + ' ' + viewY + ' ' +\n    viewWidth + ' ' + viewHeight );\n  if ( this.resize ) {\n    // remove size attributes, let size be determined by viewbox\n    this.element.removeAttribute('width');\n    this.element.removeAttribute('height');\n  } else {\n    this.element.setAttribute( 'width', width );\n    this.element.setAttribute( 'height', height );\n  }\n};\n\nIllustration.prototype.renderGraphSvg = function( item ) {\n  item = item || this;\n  empty( this.element );\n  this.onPrerender( this.element );\n  Anchor.prototype.renderGraphSvg.call( item, this.element );\n};\n\nfunction empty( element ) {\n  while ( element.firstChild ) {\n    element.removeChild( element.firstChild );\n  }\n}\n\n// ----- drag ----- //\n\nIllustration.prototype.setDragRotate = function( item ) {\n  if ( !item ) {\n    return;\n  } else if ( item === true ) {\n    /* eslint consistent-this: \"off\" */\n    item = this;\n  }\n  this.dragRotate = item;\n\n  this.bindDrag( this.element );\n};\n\nIllustration.prototype.dragStart = function(/* event, pointer */) {\n  this.dragStartRX = this.dragRotate.rotate.x;\n  this.dragStartRY = this.dragRotate.rotate.y;\n  Dragger.prototype.dragStart.apply( this, arguments );\n};\n\nIllustration.prototype.dragMove = function( event, pointer ) {\n  var moveX = pointer.pageX - this.dragStartX;\n  var moveY = pointer.pageY - this.dragStartY;\n  var displaySize = Math.min( this.width, this.height );\n  var moveRY = moveX / displaySize * TAU;\n  var moveRX = moveY / displaySize * TAU;\n  this.dragRotate.rotate.x = this.dragStartRX - moveRX;\n  this.dragRotate.rotate.y = this.dragStartRY - moveRY;\n  Dragger.prototype.dragMove.apply( this, arguments );\n};\n\nreturn Illustration;\n\n}));\n", "/**\n * PathCommand\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./vector') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.PathCommand = factory( Zdog.Vector );\n  }\n}( this, function factory( Vector ) {\n\nfunction PathCommand( method, points, previousPoint ) {\n  this.method = method;\n  this.points = points.map( mapVectorPoint );\n  this.renderPoints = points.map( mapNewVector );\n  this.previousPoint = previousPoint;\n  this.endRenderPoint = this.renderPoints[ this.renderPoints.length - 1 ];\n  // arc actions come with previous point & corner point\n  // but require bezier control points\n  if ( method == 'arc' ) {\n    this.controlPoints = [ new Vector(), new Vector() ];\n  }\n}\n\nfunction mapVectorPoint( point ) {\n  if ( point instanceof Vector ) {\n    return point;\n  } else {\n    return new Vector( point );\n  }\n}\n\nfunction mapNewVector( point ) {\n  return new Vector( point );\n}\n\nPathCommand.prototype.reset = function() {\n  // reset renderPoints back to orignal points position\n  var points = this.points;\n  this.renderPoints.forEach( function( renderPoint, i ) {\n    var point = points[i];\n    renderPoint.set( point );\n  });\n};\n\nPathCommand.prototype.transform = function( translation, rotation, scale ) {\n  this.renderPoints.forEach( function( renderPoint ) {\n    renderPoint.transform( translation, rotation, scale );\n  });\n};\n\nPathCommand.prototype.render = function( ctx, elem, renderer ) {\n  return this[ this.method ]( ctx, elem, renderer );\n};\n\nPathCommand.prototype.move = function( ctx, elem, renderer ) {\n  return renderer.move( ctx, elem, this.renderPoints[0] );\n};\n\nPathCommand.prototype.line = function( ctx, elem, renderer ) {\n  return renderer.line( ctx, elem, this.renderPoints[0] );\n};\n\nPathCommand.prototype.bezier = function( ctx, elem, renderer ) {\n  var cp0 = this.renderPoints[0];\n  var cp1 = this.renderPoints[1];\n  var end = this.renderPoints[2];\n  return renderer.bezier( ctx, elem, cp0, cp1, end );\n};\n\nvar arcHandleLength = 9/16;\n\nPathCommand.prototype.arc = function( ctx, elem, renderer ) {\n  var prev = this.previousPoint;\n  var corner = this.renderPoints[0];\n  var end = this.renderPoints[1];\n  var cp0 = this.controlPoints[0];\n  var cp1 = this.controlPoints[1];\n  cp0.set( prev ).lerp( corner, arcHandleLength );\n  cp1.set( end ).lerp( corner, arcHandleLength );\n  return renderer.bezier( ctx, elem, cp0, cp1, end );\n};\n\nreturn PathCommand;\n\n}));\n", "/**\n * Shape\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./boilerplate'), require('./vector'),\n        require('./path-command'), require('./anchor') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Shape = factory( Zdog, Zdog.Vector, Zdog.PathCommand, Zdog.Anchor );\n  }\n}( this, function factory( utils, Vector, PathCommand, Anchor ) {\n\nvar Shape = Anchor.subclass({\n  stroke: 1,\n  fill: false,\n  color: '#333',\n  closed: true,\n  visible: true,\n  path: [ {} ],\n  front: { z: 1 },\n  backface: true,\n});\n\nShape.prototype.create = function( options ) {\n  Anchor.prototype.create.call( this, options );\n  this.updatePath();\n  // front\n  this.front = new Vector( options.front || this.front );\n  this.renderFront = new Vector( this.front );\n  this.renderNormal = new Vector();\n};\n\nvar actionNames = [\n  'move',\n  'line',\n  'bezier',\n  'arc',\n];\n\nShape.prototype.updatePath = function() {\n  this.setPath();\n  this.updatePathCommands();\n};\n\n// place holder for Ellipse, Rect, etc.\nShape.prototype.setPath = function() {};\n\n// parse path into PathCommands\nShape.prototype.updatePathCommands = function() {\n  var previousPoint;\n  this.pathCommands = this.path.map( function( pathPart, i ) {\n    // pathPart can be just vector coordinates -> { x, y, z }\n    // or path instruction -> { arc: [ {x0,y0,z0}, {x1,y1,z1} ] }\n    var keys = Object.keys( pathPart );\n    var method = keys[0];\n    var points = pathPart[ method ];\n    // default to line if no instruction\n    var isInstruction = keys.length == 1 && actionNames.indexOf( method ) != -1;\n    if ( !isInstruction ) {\n      method = 'line';\n      points = pathPart;\n    }\n    // munge single-point methods like line & move without arrays\n    var isLineOrMove = method == 'line' || method == 'move';\n    var isPointsArray = Array.isArray( points );\n    if ( isLineOrMove && !isPointsArray ) {\n      points = [ points ];\n    }\n\n    // first action is always move\n    method = i === 0 ? 'move' : method;\n    // arcs require previous last point\n    var command = new PathCommand( method, points, previousPoint );\n    // update previousLastPoint\n    previousPoint = command.endRenderPoint;\n    return command;\n  });\n};\n\n// ----- update ----- //\n\nShape.prototype.reset = function() {\n  this.renderOrigin.set( this.origin );\n  this.renderFront.set( this.front );\n  // reset command render points\n  this.pathCommands.forEach( function( command ) {\n    command.reset();\n  });\n};\n\nShape.prototype.transform = function( translation, rotation, scale ) {\n  // calculate render points backface visibility & cone/hemisphere shapes\n  this.renderOrigin.transform( translation, rotation, scale );\n  this.renderFront.transform( translation, rotation, scale );\n  this.renderNormal.set( this.renderOrigin ).subtract( this.renderFront );\n  // transform points\n  this.pathCommands.forEach( function( command ) {\n    command.transform( translation, rotation, scale );\n  });\n  // transform children\n  this.children.forEach( function( child ) {\n    child.transform( translation, rotation, scale );\n  });\n};\n\nShape.prototype.updateSortValue = function() {\n  // sort by average z of all points\n  // def not geometrically correct, but works for me\n  var pointCount = this.pathCommands.length;\n  var firstPoint = this.pathCommands[0].endRenderPoint;\n  var lastPoint = this.pathCommands[ pointCount - 1 ].endRenderPoint;\n  // ignore the final point if self closing shape\n  var isSelfClosing = pointCount > 2 && firstPoint.isSame( lastPoint );\n  if ( isSelfClosing ) {\n    pointCount -= 1;\n  }\n\n  var sortValueTotal = 0;\n  for ( var i = 0; i < pointCount; i++ ) {\n    sortValueTotal += this.pathCommands[i].endRenderPoint.z;\n  }\n  this.sortValue = sortValueTotal / pointCount;\n};\n\n// ----- render ----- //\n\nShape.prototype.render = function( ctx, renderer ) {\n  var length = this.pathCommands.length;\n  if ( !this.visible || !length ) {\n    return;\n  }\n  // do not render if hiding backface\n  this.isFacingBack = this.renderNormal.z > 0;\n  if ( !this.backface && this.isFacingBack ) {\n    return;\n  }\n  if ( !renderer ) {\n    throw new Error( 'Zdog renderer required. Set to ' + renderer );\n  }\n  // render dot or path\n  var isDot = length == 1;\n  if ( renderer.isCanvas && isDot ) {\n    this.renderCanvasDot( ctx, renderer );\n  } else {\n    this.renderPath( ctx, renderer );\n  }\n};\n\nvar TAU = utils.TAU;\n// Safari does not render lines with no size, have to render circle instead\nShape.prototype.renderCanvasDot = function( ctx ) {\n  var lineWidth = this.getLineWidth();\n  if ( !lineWidth ) {\n    return;\n  }\n  ctx.fillStyle = this.getRenderColor();\n  var point = this.pathCommands[0].endRenderPoint;\n  ctx.beginPath();\n  var radius = lineWidth/2;\n  ctx.arc( point.x, point.y, radius, 0, TAU );\n  ctx.fill();\n};\n\nShape.prototype.getLineWidth = function() {\n  if ( !this.stroke ) {\n    return 0;\n  }\n  if ( this.stroke == true ) {\n    return 1;\n  }\n  return this.stroke;\n};\n\nShape.prototype.getRenderColor = function() {\n  // use backface color if applicable\n  var isBackfaceColor = typeof this.backface == 'string' && this.isFacingBack;\n  var color = isBackfaceColor ? this.backface : this.color;\n  return color;\n};\n\nShape.prototype.renderPath = function( ctx, renderer ) {\n  var elem = this.getRenderElement( ctx, renderer );\n  var isTwoPoints = this.pathCommands.length == 2 &&\n    this.pathCommands[1].method == 'line';\n  var isClosed = !isTwoPoints && this.closed;\n  var color = this.getRenderColor();\n\n  renderer.renderPath( ctx, elem, this.pathCommands, isClosed );\n  renderer.stroke( ctx, elem, this.stroke, color, this.getLineWidth() );\n  renderer.fill( ctx, elem, this.fill, color );\n  renderer.end( ctx, elem );\n};\n\nvar svgURI = 'http://www.w3.org/2000/svg';\n\nShape.prototype.getRenderElement = function( ctx, renderer ) {\n  if ( !renderer.isSvg ) {\n    return;\n  }\n  if ( !this.svgElement ) {\n    // create svgElement\n    this.svgElement = document.createElementNS( svgURI, 'path');\n    this.svgElement.setAttribute( 'stroke-linecap', 'round' );\n    this.svgElement.setAttribute( 'stroke-linejoin', 'round' );\n  }\n  return this.svgElement;\n};\n\nreturn Shape;\n\n}));\n", "/**\n * Group\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./anchor') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Group = factory( Zdog.Anchor );\n  }\n}( this, function factory( Anchor ) {\n\nvar Group = Anchor.subclass({\n  updateSort: false,\n  visible: true,\n});\n\n// ----- update ----- //\n\nGroup.prototype.updateSortValue = function() {\n  var sortValueTotal = 0;\n  this.flatGraph.forEach( function( item ) {\n    item.updateSortValue();\n    sortValueTotal += item.sortValue;\n  });\n  // average sort value of all points\n  // def not geometrically correct, but works for me\n  this.sortValue = sortValueTotal / this.flatGraph.length;\n\n  if ( this.updateSort ) {\n    this.flatGraph.sort( Anchor.shapeSorter );\n  }\n};\n\n// ----- render ----- //\n\nGroup.prototype.render = function( ctx, renderer ) {\n  if ( !this.visible ) {\n    return;\n  }\n\n  this.flatGraph.forEach( function( item ) {\n    item.render( ctx, renderer );\n  });\n};\n\n// actual group flatGraph only used inside group\nGroup.prototype.updateFlatGraph = function() {\n  // do not include self\n  var flatGraph = [];\n  this.flatGraph = this.addChildFlatGraph( flatGraph );\n};\n\n// do not include children, group handles rendering & sorting internally\nGroup.prototype.getFlatGraph = function() {\n  return [ this ];\n};\n\nreturn Group;\n\n}));\n", "/**\n * Rect\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./shape') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Rect = factory( Zdog.Shape );\n  }\n}( this, function factory( Shape ) {\n\nvar Rect = Shape.subclass({\n  width: 1,\n  height: 1,\n});\n\nRect.prototype.setPath = function() {\n  var x = this.width / 2;\n  var y = this.height / 2;\n  /* eslint key-spacing: \"off\" */\n  this.path = [\n    { x: -x, y: -y },\n    { x:  x, y: -y },\n    { x:  x, y:  y },\n    { x: -x, y:  y },\n  ];\n};\n\nreturn Rect;\n\n}));\n", "/**\n * RoundedRect\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./shape') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.RoundedRect = factory( Zdog.Shape );\n  }\n}( this, function factory( Shape ) {\n\nvar RoundedRect = Shape.subclass({\n  width: 1,\n  height: 1,\n  cornerRadius: 0.25,\n  closed: false,\n});\n\nRoundedRect.prototype.setPath = function() {\n  /* eslint\n     id-length: [ \"error\", { \"min\": 2, \"exceptions\": [ \"x\", \"y\" ] }],\n     key-spacing: \"off\" */\n  var xA = this.width / 2;\n  var yA = this.height / 2;\n  var shortSide = Math.min( xA, yA );\n  var cornerRadius = Math.min( this.cornerRadius, shortSide );\n  var xB = xA - cornerRadius;\n  var yB = yA - cornerRadius;\n  var path = [\n    // top right corner\n    { x: xB, y: -yA },\n    { arc: [\n      { x: xA, y: -yA },\n      { x: xA, y: -yB },\n    ]},\n  ];\n  // bottom right corner\n  if ( yB ) {\n    path.push({ x: xA, y: yB });\n  }\n  path.push({ arc: [\n    { x: xA, y:  yA },\n    { x: xB, y:  yA },\n  ]});\n  // bottom left corner\n  if ( xB ) {\n    path.push({ x: -xB, y: yA });\n  }\n  path.push({ arc: [\n    { x: -xA, y:  yA },\n    { x: -xA, y:  yB },\n  ]});\n  // top left corner\n  if ( yB ) {\n    path.push({ x: -xA, y: -yB });\n  }\n  path.push({ arc: [\n    { x: -xA, y: -yA },\n    { x: -xB, y: -yA },\n  ]});\n\n  // back to top right corner\n  if ( xB ) {\n    path.push({ x: xB, y: -yA });\n  }\n\n  this.path = path;\n};\n\nreturn RoundedRect;\n\n}));\n", "/**\n * Ellipse\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./shape') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Ellipse = factory( Zdog.Shape );\n  }\n\n}( this, function factory( Shape ) {\n\nvar Ellipse = Shape.subclass({\n  diameter: 1,\n  width: undefined,\n  height: undefined,\n  quarters: 4,\n  closed: false,\n});\n\nEllipse.prototype.setPath = function() {\n  var width = this.width != undefined ? this.width : this.diameter;\n  var height = this.height != undefined ? this.height : this.diameter;\n  var x = width / 2;\n  var y = height / 2;\n  this.path = [\n    { x: 0, y: -y },\n    { arc: [ // top right\n      { x: x, y: -y },\n      { x: x, y: 0 },\n    ]},\n  ];\n  // bottom right\n  if ( this.quarters > 1 ) {\n    this.path.push({ arc: [\n      { x: x, y: y },\n      { x: 0, y: y },\n    ]});\n  }\n  // bottom left\n  if ( this.quarters > 2 ) {\n    this.path.push({ arc: [\n      { x: -x, y: y },\n      { x: -x, y: 0 },\n    ]});\n  }\n  // top left\n  if ( this.quarters > 3 ) {\n    this.path.push({ arc: [\n      { x: -x, y: -y },\n      { x: 0, y: -y },\n    ]});\n  }\n};\n\nreturn Ellipse;\n\n}));\n", "/**\n * Shape\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./boilerplate'), require('./shape') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Polygon = factory( Zdog, Zdog.Shape );\n  }\n}( this, function factory( utils, Shape ) {\n\nvar Polygon = Shape.subclass({\n  sides: 3,\n  radius: 0.5,\n});\n\nvar TAU = utils.TAU;\n\nPolygon.prototype.setPath = function() {\n  this.path = [];\n  for ( var i=0; i < this.sides; i++ ) {\n    var theta = i/this.sides * TAU - TAU/4;\n    var x = Math.cos( theta ) * this.radius;\n    var y = Math.sin( theta ) * this.radius;\n    this.path.push({ x: x, y: y });\n  }\n};\n\nreturn Polygon;\n\n}));\n", "/**\n * Hemisphere composite shape\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./boilerplate'), require('./vector'),\n        require('./anchor'), require('./ellipse') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Hemisphere = factory( Zdog, Zdog.Vector, Zdog.Anchor, Zdog.Ellipse );\n  }\n}( this, function factory( utils, Vector, Anchor, Ellipse ) {\n\nvar Hemisphere = Ellipse.subclass({\n  fill: true,\n});\n\nvar TAU = utils.TAU;\n\nHemisphere.prototype.create = function(/* options */) {\n  // call super\n  Ellipse.prototype.create.apply( this, arguments );\n  // composite shape, create child shapes\n  this.apex = new Anchor({\n    addTo: this,\n    translate: { z: this.diameter/2 },\n  });\n  // vector used for calculation\n  this.renderCentroid = new Vector();\n};\n\nHemisphere.prototype.updateSortValue = function() {\n  // centroid of hemisphere is 3/8 between origin and apex\n  this.renderCentroid.set( this.renderOrigin )\n    .lerp( this.apex.renderOrigin, 3/8 );\n  this.sortValue = this.renderCentroid.z;\n};\n\nHemisphere.prototype.render = function( ctx, renderer ) {\n  this.renderDome( ctx, renderer );\n  // call super\n  Ellipse.prototype.render.apply( this, arguments );\n};\n\nHemisphere.prototype.renderDome = function( ctx, renderer ) {\n  if ( !this.visible ) {\n    return;\n  }\n  var elem = this.getDomeRenderElement( ctx, renderer );\n  var contourAngle = Math.atan2( this.renderNormal.y, this.renderNormal.x );\n  var domeRadius = this.diameter/2 * this.renderNormal.magnitude();\n  var x = this.renderOrigin.x;\n  var y = this.renderOrigin.y;\n\n  if ( renderer.isCanvas ) {\n    // canvas\n    var startAngle = contourAngle + TAU/4;\n    var endAngle = contourAngle - TAU/4;\n    ctx.beginPath();\n    ctx.arc( x, y, domeRadius, startAngle, endAngle );\n  } else if ( renderer.isSvg ) {\n    // svg\n    contourAngle = (contourAngle - TAU/4) / TAU * 360;\n    this.domeSvgElement.setAttribute( 'd', 'M ' + -domeRadius + ',0 A ' +\n        domeRadius + ',' + domeRadius + ' 0 0 1 ' + domeRadius + ',0' );\n    this.domeSvgElement.setAttribute( 'transform',\n        'translate(' + x + ',' + y + ' ) rotate(' + contourAngle + ')' );\n  }\n\n  renderer.stroke( ctx, elem, this.stroke, this.color, this.getLineWidth() );\n  renderer.fill( ctx, elem, this.fill, this.color );\n  renderer.end( ctx, elem );\n};\n\nvar svgURI = 'http://www.w3.org/2000/svg';\n\nHemisphere.prototype.getDomeRenderElement = function( ctx, renderer ) {\n  if ( !renderer.isSvg ) {\n    return;\n  }\n  if ( !this.domeSvgElement ) {\n    // create svgElement\n    this.domeSvgElement = document.createElementNS( svgURI, 'path');\n    this.domeSvgElement.setAttribute( 'stroke-linecap', 'round' );\n    this.domeSvgElement.setAttribute( 'stroke-linejoin', 'round' );\n  }\n  return this.domeSvgElement;\n};\n\nreturn Hemisphere;\n\n}));\n", "/**\n * Cylinder composite shape\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./boilerplate'),\n        require('./path-command'), require('./shape'), require('./group'),\n        require('./ellipse') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Cylinder = factory( Zdog, Zdog.PathCommand, Zdog.Shape,\n        Zdog.Group, Zdog.Ellipse );\n  }\n}( this, function factory( utils, PathCommand, Shape, Group, Ellipse ) {\n\nfunction noop() {}\n\n// ----- CylinderGroup ----- //\n\nvar CylinderGroup = Group.subclass({\n  color: '#333',\n  updateSort: true,\n});\n\nCylinderGroup.prototype.create = function() {\n  Group.prototype.create.apply( this, arguments );\n  this.pathCommands = [\n    new PathCommand( 'move', [ {} ] ),\n    new PathCommand( 'line', [ {} ] ),\n  ];\n};\n\nCylinderGroup.prototype.render = function( ctx, renderer ) {\n  this.renderCylinderSurface( ctx, renderer );\n  Group.prototype.render.apply( this, arguments );\n};\n\nCylinderGroup.prototype.renderCylinderSurface = function( ctx, renderer ) {\n  if ( !this.visible ) {\n    return;\n  }\n  // render cylinder surface\n  var elem = this.getRenderElement( ctx, renderer );\n  var frontBase = this.frontBase;\n  var rearBase = this.rearBase;\n  var scale = frontBase.renderNormal.magnitude();\n  var strokeWidth = frontBase.diameter * scale + frontBase.getLineWidth();\n  // set path command render points\n  this.pathCommands[0].renderPoints[0].set( frontBase.renderOrigin );\n  this.pathCommands[1].renderPoints[0].set( rearBase.renderOrigin );\n\n  if ( renderer.isCanvas ) {\n    ctx.lineCap = 'butt'; // nice\n  }\n  renderer.renderPath( ctx, elem, this.pathCommands );\n  renderer.stroke( ctx, elem, true, this.color, strokeWidth );\n  renderer.end( ctx, elem );\n\n  if ( renderer.isCanvas ) {\n    ctx.lineCap = 'round'; // reset\n  }\n};\n\nvar svgURI = 'http://www.w3.org/2000/svg';\n\nCylinderGroup.prototype.getRenderElement = function( ctx, renderer ) {\n  if ( !renderer.isSvg ) {\n    return;\n  }\n  if ( !this.svgElement ) {\n    // create svgElement\n    this.svgElement = document.createElementNS( svgURI, 'path');\n  }\n  return this.svgElement;\n};\n\n// prevent double-creation in parent.copyGraph()\n// only create in Cylinder.create()\nCylinderGroup.prototype.copyGraph = noop;\n\n// ----- CylinderEllipse ----- //\n\nvar CylinderEllipse = Ellipse.subclass();\n\nCylinderEllipse.prototype.copyGraph = noop;\n\n// ----- Cylinder ----- //\n\nvar Cylinder = Shape.subclass({\n  diameter: 1,\n  length: 1,\n  frontFace: undefined,\n  fill: true,\n});\n\nvar TAU = utils.TAU;\n\nCylinder.prototype.create = function(/* options */) {\n  // call super\n  Shape.prototype.create.apply( this, arguments );\n  // composite shape, create child shapes\n  // CylinderGroup to render cylinder surface then bases\n  this.group = new CylinderGroup({\n    addTo: this,\n    color: this.color,\n    visible: this.visible,\n  });\n  var baseZ = this.length/2;\n  var baseColor = this.backface || true;\n  // front outside base\n  this.frontBase = this.group.frontBase = new Ellipse({\n    addTo: this.group,\n    diameter: this.diameter,\n    translate: { z: baseZ },\n    rotate: { y: TAU/2 },\n    color: this.color,\n    stroke: this.stroke,\n    fill: this.fill,\n    backface: this.frontFace || baseColor,\n    visible: this.visible,\n  });\n  // back outside base\n  this.rearBase = this.group.rearBase = this.frontBase.copy({\n    translate: { z: -baseZ },\n    rotate: { y: 0 },\n    backface: baseColor,\n  });\n};\n\n// Cylinder shape does not render anything\nCylinder.prototype.render = function() {};\n\n// ----- set child properties ----- //\n\nvar childProperties = [ 'stroke', 'fill', 'color', 'visible' ];\nchildProperties.forEach( function( property ) {\n  // use proxy property for custom getter & setter\n  var _prop = '_' + property;\n  Object.defineProperty( Cylinder.prototype, property, {\n    get: function() {\n      return this[ _prop ];\n    },\n    set: function( value ) {\n      this[ _prop ] = value;\n      // set property on children\n      if ( this.frontBase ) {\n        this.frontBase[ property ] = value;\n        this.rearBase[ property ] = value;\n        this.group[ property ] = value;\n      }\n    },\n  });\n});\n\n// TODO child property setter for backface, frontBaseColor, & rearBaseColor\n\nreturn Cylinder;\n\n}));\n", "/**\n * Cone composite shape\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./boilerplate'), require('./vector'),\n        require('./path-command'), require('./anchor'), require('./ellipse') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Cone = factory( Zdog, Zdog.Vector, Zdog.PathCommand,\n        Zdog.Anchor, Zdog.Ellipse );\n  }\n}( this, function factory( utils, Vector, PathCommand, Anchor, Ellipse ) {\n\nvar Cone = Ellipse.subclass({\n  length: 1,\n  fill: true,\n});\n\nvar TAU = utils.TAU;\n\nCone.prototype.create = function(/* options */) {\n  // call super\n  Ellipse.prototype.create.apply( this, arguments );\n  // composite shape, create child shapes\n  this.apex = new Anchor({\n    addTo: this,\n    translate: { z: this.length },\n  });\n\n  // vectors used for calculation\n  this.renderApex = new Vector();\n  this.renderCentroid = new Vector();\n  this.tangentA = new Vector();\n  this.tangentB = new Vector();\n\n  this.surfacePathCommands = [\n    new PathCommand( 'move', [ {} ] ), // points set in renderConeSurface\n    new PathCommand( 'line', [ {} ] ),\n    new PathCommand( 'line', [ {} ] ),\n  ];\n};\n\nCone.prototype.updateSortValue = function() {\n  // center of cone is one third of its length\n  this.renderCentroid.set( this.renderOrigin )\n    .lerp( this.apex.renderOrigin, 1/3 );\n  this.sortValue = this.renderCentroid.z;\n};\n\nCone.prototype.render = function( ctx, renderer ) {\n  this.renderConeSurface( ctx, renderer );\n  Ellipse.prototype.render.apply( this, arguments );\n};\n\nCone.prototype.renderConeSurface = function( ctx, renderer ) {\n  if ( !this.visible ) {\n    return;\n  }\n  this.renderApex.set( this.apex.renderOrigin )\n    .subtract( this.renderOrigin );\n\n  var scale = this.renderNormal.magnitude();\n  var apexDistance = this.renderApex.magnitude2d();\n  var normalDistance = this.renderNormal.magnitude2d();\n  // eccentricity\n  var eccenAngle = Math.acos( normalDistance / scale );\n  var eccen = Math.sin( eccenAngle );\n  var radius = this.diameter/2 * scale;\n  // does apex extend beyond eclipse of face\n  var isApexVisible = radius * eccen < apexDistance;\n  if ( !isApexVisible ) {\n    return;\n  }\n  // update tangents\n  var apexAngle = Math.atan2( this.renderNormal.y, this.renderNormal.x ) +\n      TAU/2;\n  var projectLength = apexDistance / eccen;\n  var projectAngle = Math.acos( radius / projectLength );\n  // set tangent points\n  var tangentA = this.tangentA;\n  var tangentB = this.tangentB;\n\n  tangentA.x = Math.cos( projectAngle ) * radius * eccen;\n  tangentA.y = Math.sin( projectAngle ) * radius;\n\n  tangentB.set( this.tangentA );\n  tangentB.y *= -1;\n\n  tangentA.rotateZ( apexAngle );\n  tangentB.rotateZ( apexAngle );\n  tangentA.add( this.renderOrigin );\n  tangentB.add( this.renderOrigin );\n\n  this.setSurfaceRenderPoint( 0, tangentA );\n  this.setSurfaceRenderPoint( 1, this.apex.renderOrigin );\n  this.setSurfaceRenderPoint( 2, tangentB );\n\n  // render\n  var elem = this.getSurfaceRenderElement( ctx, renderer );\n  renderer.renderPath( ctx, elem, this.surfacePathCommands );\n  renderer.stroke( ctx, elem, this.stroke, this.color, this.getLineWidth() );\n  renderer.fill( ctx, elem, this.fill, this.color );\n  renderer.end( ctx, elem );\n};\n\nvar svgURI = 'http://www.w3.org/2000/svg';\n\nCone.prototype.getSurfaceRenderElement = function( ctx, renderer ) {\n  if ( !renderer.isSvg ) {\n    return;\n  }\n  if ( !this.surfaceSvgElement ) {\n    // create svgElement\n    this.surfaceSvgElement = document.createElementNS( svgURI, 'path');\n    this.surfaceSvgElement.setAttribute( 'stroke-linecap', 'round' );\n    this.surfaceSvgElement.setAttribute( 'stroke-linejoin', 'round' );\n  }\n  return this.surfaceSvgElement;\n};\n\nCone.prototype.setSurfaceRenderPoint = function( index, point ) {\n  var renderPoint = this.surfacePathCommands[ index ].renderPoints[0];\n  renderPoint.set( point );\n};\n\nreturn Cone;\n\n}));\n", "/**\n * Box composite shape\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./boilerplate'), require('./anchor'),\n        require('./shape'), require('./rect') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Box = factory( Zdog, Zdog.Anchor, Zdog.Shape, Zdog.Rect );\n  }\n}( this, function factory( utils, Anchor, Shape, Rect ) {\n\n// ----- BoxRect ----- //\n\nvar BoxRect = Rect.subclass();\n// prevent double-creation in parent.copyGraph()\n// only create in Box.create()\nBoxRect.prototype.copyGraph = function() {};\n\n// ----- Box ----- //\n\nvar TAU = utils.TAU;\nvar faceNames = [\n  'frontFace',\n  'rearFace',\n  'leftFace',\n  'rightFace',\n  'topFace',\n  'bottomFace',\n];\n\nvar boxDefaults = utils.extend( {}, Shape.defaults );\ndelete boxDefaults.path;\nfaceNames.forEach( function( faceName ) {\n  boxDefaults[ faceName ] = true;\n});\nutils.extend( boxDefaults, {\n  width: 1,\n  height: 1,\n  depth: 1,\n  fill: true,\n});\n\nvar Box = Anchor.subclass( boxDefaults );\n\nBox.prototype.create = function( options ) {\n  Anchor.prototype.create.call( this, options );\n  this.updatePath();\n  // HACK reset fill to trigger face setter\n  this.fill = this.fill;\n};\n\nBox.prototype.updatePath = function() {\n  // reset all faces to trigger setters\n  faceNames.forEach( function( faceName ) {\n    this[ faceName ] = this[ faceName ];\n  }, this );\n};\n\nfaceNames.forEach( function( faceName ) {\n  var _faceName = '_' + faceName;\n  Object.defineProperty( Box.prototype, faceName, {\n    get: function() {\n      return this[ _faceName ];\n    },\n    set: function( value ) {\n      this[ _faceName ] = value;\n      this.setFace( faceName, value );\n    },\n  });\n});\n\nBox.prototype.setFace = function( faceName, value ) {\n  var rectProperty = faceName + 'Rect';\n  var rect = this[ rectProperty ];\n  // remove if false\n  if ( !value ) {\n    this.removeChild( rect );\n    return;\n  }\n  // update & add face\n  var options = this.getFaceOptions( faceName );\n  options.color = typeof value == 'string' ? value : this.color;\n\n  if ( rect ) {\n    // update previous\n    rect.setOptions( options );\n  } else {\n    // create new\n    rect = this[ rectProperty ] = new BoxRect( options );\n  }\n  rect.updatePath();\n  this.addChild( rect );\n};\n\nBox.prototype.getFaceOptions = function( faceName ) {\n  return {\n    frontFace: {\n      width: this.width,\n      height: this.height,\n      translate: { z: this.depth/2 },\n    },\n    rearFace: {\n      width: this.width,\n      height: this.height,\n      translate: { z: -this.depth/2 },\n      rotate: { y: TAU/2 },\n    },\n    leftFace: {\n      width: this.depth,\n      height: this.height,\n      translate: { x: -this.width/2 },\n      rotate: { y: -TAU/4 },\n    },\n    rightFace: {\n      width: this.depth,\n      height: this.height,\n      translate: { x: this.width/2 },\n      rotate: { y: TAU/4 },\n    },\n    topFace: {\n      width: this.width,\n      height: this.depth,\n      translate: { y: -this.height/2 },\n      rotate: { x: -TAU/4 },\n    },\n    bottomFace: {\n      width: this.width,\n      height: this.depth,\n      translate: { y: this.height/2 },\n      rotate: { x: TAU/4 },\n    },\n  }[ faceName ];\n};\n\n// ----- set face properties ----- //\n\nvar childProperties = [ 'color', 'stroke', 'fill', 'backface', 'front',\n  'visible' ];\nchildProperties.forEach( function( property ) {\n  // use proxy property for custom getter & setter\n  var _prop = '_' + property;\n  Object.defineProperty( Box.prototype, property, {\n    get: function() {\n      return this[ _prop ];\n    },\n    set: function( value ) {\n      this[ _prop ] = value;\n      faceNames.forEach( function( faceName ) {\n        var rect = this[ faceName + 'Rect' ];\n        var isFaceColor = typeof this[ faceName ] == 'string';\n        var isColorUnderwrite = property == 'color' && isFaceColor;\n        if ( rect && !isColorUnderwrite ) {\n          rect[ property ] = value;\n        }\n      }, this );\n    },\n  });\n});\n\nreturn Box;\n\n}));\n", "/**\n * Index\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        require('./boilerplate'),\n        require('./canvas-renderer'),\n        require('./svg-renderer'),\n        require('./vector'),\n        require('./anchor'),\n        require('./dragger'),\n        require('./illustration'),\n        require('./path-command'),\n        require('./shape'),\n        require('./group'),\n        require('./rect'),\n        require('./rounded-rect'),\n        require('./ellipse'),\n        require('./polygon'),\n        require('./hemisphere'),\n        require('./cylinder'),\n        require('./cone'),\n        require('./box')\n    );\n  } else if ( typeof define == 'function' && define.amd ) {\n    /* globals define */ // AMD\n    define( 'zdog', [], root.Zdog );\n  }\n})( this, function factory( Zdog, CanvasRenderer, SvgRenderer, Vector, Anchor,\n    Dragger, Illustration, PathCommand, Shape, Group, Rect, RoundedRect,\n    Ellipse, Polygon, Hemisphere, Cylinder, Cone, Box ) {\n\n      Zdog.CanvasRenderer = CanvasRenderer;\n      Zdog.SvgRenderer = SvgRenderer;\n      Zdog.Vector = Vector;\n      Zdog.Anchor = Anchor;\n      Zdog.Dragger = Dragger;\n      Zdog.Illustration = Illustration;\n      Zdog.PathCommand = PathCommand;\n      Zdog.Shape = Shape;\n      Zdog.Group = Group;\n      Zdog.Rect = Rect;\n      Zdog.RoundedRect = RoundedRect;\n      Zdog.Ellipse = Ellipse;\n      Zdog.Polygon = Polygon;\n      Zdog.Hemisphere = Hemisphere;\n      Zdog.Cylinder = Cylinder;\n      Zdog.Cone = Cone;\n      Zdog.Box = Box;\n\n      return Zdog;\n});\n", "function t(t,e,s){if(t&&t.length){const[n,a]=e,o=Math.PI/180*s,h=Math.cos(o),r=Math.sin(o);t.forEach((t=>{const[e,s]=t;t[0]=(e-n)*h-(s-a)*r+n,t[1]=(e-n)*r+(s-a)*h+a}))}}function e(t){const e=t[0],s=t[1];return Math.sqrt(Math.pow(e[0]-s[0],2)+Math.pow(e[1]-s[1],2))}function s(e,s){const n=s.hachureAngle+90;let a=s.hachureGap;a<0&&(a=4*s.strokeWidth),a=Math.max(a,.1);const o=[0,0];if(n)for(const s of e)t(s,o,n);const h=function(t,e){const s=[];for(const e of t){const t=[...e];t[0].join(\",\")!==t[t.length-1].join(\",\")&&t.push([t[0][0],t[0][1]]),t.length>2&&s.push(t)}const n=[];e=Math.max(e,.1);const a=[];for(const t of s)for(let e=0;e<t.length-1;e++){const s=t[e],n=t[e+1];if(s[1]!==n[1]){const t=Math.min(s[1],n[1]);a.push({ymin:t,ymax:Math.max(s[1],n[1]),x:t===s[1]?s[0]:n[0],islope:(n[0]-s[0])/(n[1]-s[1])})}}if(a.sort(((t,e)=>t.ymin<e.ymin?-1:t.ymin>e.ymin?1:t.x<e.x?-1:t.x>e.x?1:t.ymax===e.ymax?0:(t.ymax-e.ymax)/Math.abs(t.ymax-e.ymax))),!a.length)return n;let o=[],h=a[0].ymin;for(;o.length||a.length;){if(a.length){let t=-1;for(let e=0;e<a.length&&!(a[e].ymin>h);e++)t=e;a.splice(0,t+1).forEach((t=>{o.push({s:h,edge:t})}))}if(o=o.filter((t=>!(t.edge.ymax<=h))),o.sort(((t,e)=>t.edge.x===e.edge.x?0:(t.edge.x-e.edge.x)/Math.abs(t.edge.x-e.edge.x))),o.length>1)for(let t=0;t<o.length;t+=2){const e=t+1;if(e>=o.length)break;const s=o[t].edge,a=o[e].edge;n.push([[Math.round(s.x),h],[Math.round(a.x),h]])}h+=e,o.forEach((t=>{t.edge.x=t.edge.x+e*t.edge.islope}))}return n}(e,a);if(n){for(const s of e)t(s,o,-n);!function(e,s,n){const a=[];e.forEach((t=>a.push(...t))),t(a,s,n)}(h,o,-n)}return h}class n{constructor(t){this.helper=t}fillPolygons(t,e){return this._fillPolygons(t,e)}_fillPolygons(t,e){const n=s(t,e);return{type:\"fillSketch\",ops:this.renderLines(n,e)}}renderLines(t,e){const s=[];for(const n of t)s.push(...this.helper.doubleLineOps(n[0][0],n[0][1],n[1][0],n[1][1],e));return s}}class a extends n{fillPolygons(t,n){let a=n.hachureGap;a<0&&(a=4*n.strokeWidth),a=Math.max(a,.1);const o=s(t,Object.assign({},n,{hachureGap:a})),h=Math.PI/180*n.hachureAngle,r=[],i=.5*a*Math.cos(h),c=.5*a*Math.sin(h);for(const[t,s]of o)e([t,s])&&r.push([[t[0]-i,t[1]+c],[...s]],[[t[0]+i,t[1]-c],[...s]]);return{type:\"fillSketch\",ops:this.renderLines(r,n)}}}class o extends n{fillPolygons(t,e){const s=this._fillPolygons(t,e),n=Object.assign({},e,{hachureAngle:e.hachureAngle+90}),a=this._fillPolygons(t,n);return s.ops=s.ops.concat(a.ops),s}}class h{constructor(t){this.helper=t}fillPolygons(t,e){const n=s(t,e=Object.assign({},e,{hachureAngle:0}));return this.dotsOnLines(n,e)}dotsOnLines(t,s){const n=[];let a=s.hachureGap;a<0&&(a=4*s.strokeWidth),a=Math.max(a,.1);let o=s.fillWeight;o<0&&(o=s.strokeWidth/2);const h=a/4;for(const r of t){const t=e(r),i=t/a,c=Math.ceil(i)-1,l=t-c*a,u=(r[0][0]+r[1][0])/2-a/4,p=Math.min(r[0][1],r[1][1]);for(let t=0;t<c;t++){const e=p+l+t*a,r=u-h+2*Math.random()*h,i=e-h+2*Math.random()*h,c=this.helper.ellipse(r,i,o,o,s);n.push(...c.ops)}}return{type:\"fillSketch\",ops:n}}}class r{constructor(t){this.helper=t}fillPolygons(t,e){const n=s(t,e);return{type:\"fillSketch\",ops:this.dashedLine(n,e)}}dashedLine(t,s){const n=s.dashOffset<0?s.hachureGap<0?4*s.strokeWidth:s.hachureGap:s.dashOffset,a=s.dashGap<0?s.hachureGap<0?4*s.strokeWidth:s.hachureGap:s.dashGap,o=[];return t.forEach((t=>{const h=e(t),r=Math.floor(h/(n+a)),i=(h+a-r*(n+a))/2;let c=t[0],l=t[1];c[0]>l[0]&&(c=t[1],l=t[0]);const u=Math.atan((l[1]-c[1])/(l[0]-c[0]));for(let t=0;t<r;t++){const e=t*(n+a),h=e+n,r=[c[0]+e*Math.cos(u)+i*Math.cos(u),c[1]+e*Math.sin(u)+i*Math.sin(u)],l=[c[0]+h*Math.cos(u)+i*Math.cos(u),c[1]+h*Math.sin(u)+i*Math.sin(u)];o.push(...this.helper.doubleLineOps(r[0],r[1],l[0],l[1],s))}})),o}}class i{constructor(t){this.helper=t}fillPolygons(t,e){const n=e.hachureGap<0?4*e.strokeWidth:e.hachureGap,a=e.zigzagOffset<0?n:e.zigzagOffset,o=s(t,e=Object.assign({},e,{hachureGap:n+a}));return{type:\"fillSketch\",ops:this.zigzagLines(o,a,e)}}zigzagLines(t,s,n){const a=[];return t.forEach((t=>{const o=e(t),h=Math.round(o/(2*s));let r=t[0],i=t[1];r[0]>i[0]&&(r=t[1],i=t[0]);const c=Math.atan((i[1]-r[1])/(i[0]-r[0]));for(let t=0;t<h;t++){const e=2*t*s,o=2*(t+1)*s,h=Math.sqrt(2*Math.pow(s,2)),i=[r[0]+e*Math.cos(c),r[1]+e*Math.sin(c)],l=[r[0]+o*Math.cos(c),r[1]+o*Math.sin(c)],u=[i[0]+h*Math.cos(c+Math.PI/4),i[1]+h*Math.sin(c+Math.PI/4)];a.push(...this.helper.doubleLineOps(i[0],i[1],u[0],u[1],n),...this.helper.doubleLineOps(u[0],u[1],l[0],l[1],n))}})),a}}const c={};class l{constructor(t){this.seed=t}next(){return this.seed?(2**31-1&(this.seed=Math.imul(48271,this.seed)))/2**31:Math.random()}}const u={A:7,a:7,C:6,c:6,H:1,h:1,L:2,l:2,M:2,m:2,Q:4,q:4,S:4,s:4,T:2,t:2,V:1,v:1,Z:0,z:0};function p(t,e){return t.type===e}function f(t){const e=[],s=function(t){const e=new Array;for(;\"\"!==t;)if(t.match(/^([ \\t\\r\\n,]+)/))t=t.substr(RegExp.$1.length);else if(t.match(/^([aAcChHlLmMqQsStTvVzZ])/))e[e.length]={type:0,text:RegExp.$1},t=t.substr(RegExp.$1.length);else{if(!t.match(/^(([-+]?[0-9]+(\\.[0-9]*)?|[-+]?\\.[0-9]+)([eE][-+]?[0-9]+)?)/))return[];e[e.length]={type:1,text:`${parseFloat(RegExp.$1)}`},t=t.substr(RegExp.$1.length)}return e[e.length]={type:2,text:\"\"},e}(t);let n=\"BOD\",a=0,o=s[a];for(;!p(o,2);){let h=0;const r=[];if(\"BOD\"===n){if(\"M\"!==o.text&&\"m\"!==o.text)return f(\"M0,0\"+t);a++,h=u[o.text],n=o.text}else p(o,1)?h=u[n]:(a++,h=u[o.text],n=o.text);if(!(a+h<s.length))throw new Error(\"Path data ended short\");for(let t=a;t<a+h;t++){const e=s[t];if(!p(e,1))throw new Error(\"Param not a number: \"+n+\",\"+e.text);r[r.length]=+e.text}if(\"number\"!=typeof u[n])throw new Error(\"Bad segment: \"+n);{const t={key:n,data:r};e.push(t),a+=h,o=s[a],\"M\"===n&&(n=\"L\"),\"m\"===n&&(n=\"l\")}}return e}function d(t){let e=0,s=0,n=0,a=0;const o=[];for(const{key:h,data:r}of t)switch(h){case\"M\":o.push({key:\"M\",data:[...r]}),[e,s]=r,[n,a]=r;break;case\"m\":e+=r[0],s+=r[1],o.push({key:\"M\",data:[e,s]}),n=e,a=s;break;case\"L\":o.push({key:\"L\",data:[...r]}),[e,s]=r;break;case\"l\":e+=r[0],s+=r[1],o.push({key:\"L\",data:[e,s]});break;case\"C\":o.push({key:\"C\",data:[...r]}),e=r[4],s=r[5];break;case\"c\":{const t=r.map(((t,n)=>n%2?t+s:t+e));o.push({key:\"C\",data:t}),e=t[4],s=t[5];break}case\"Q\":o.push({key:\"Q\",data:[...r]}),e=r[2],s=r[3];break;case\"q\":{const t=r.map(((t,n)=>n%2?t+s:t+e));o.push({key:\"Q\",data:t}),e=t[2],s=t[3];break}case\"A\":o.push({key:\"A\",data:[...r]}),e=r[5],s=r[6];break;case\"a\":e+=r[5],s+=r[6],o.push({key:\"A\",data:[r[0],r[1],r[2],r[3],r[4],e,s]});break;case\"H\":o.push({key:\"H\",data:[...r]}),e=r[0];break;case\"h\":e+=r[0],o.push({key:\"H\",data:[e]});break;case\"V\":o.push({key:\"V\",data:[...r]}),s=r[0];break;case\"v\":s+=r[0],o.push({key:\"V\",data:[s]});break;case\"S\":o.push({key:\"S\",data:[...r]}),e=r[2],s=r[3];break;case\"s\":{const t=r.map(((t,n)=>n%2?t+s:t+e));o.push({key:\"S\",data:t}),e=t[2],s=t[3];break}case\"T\":o.push({key:\"T\",data:[...r]}),e=r[0],s=r[1];break;case\"t\":e+=r[0],s+=r[1],o.push({key:\"T\",data:[e,s]});break;case\"Z\":case\"z\":o.push({key:\"Z\",data:[]}),e=n,s=a}return o}function g(t){const e=[];let s=\"\",n=0,a=0,o=0,h=0,r=0,i=0;for(const{key:c,data:l}of t){switch(c){case\"M\":e.push({key:\"M\",data:[...l]}),[n,a]=l,[o,h]=l;break;case\"C\":e.push({key:\"C\",data:[...l]}),n=l[4],a=l[5],r=l[2],i=l[3];break;case\"L\":e.push({key:\"L\",data:[...l]}),[n,a]=l;break;case\"H\":n=l[0],e.push({key:\"L\",data:[n,a]});break;case\"V\":a=l[0],e.push({key:\"L\",data:[n,a]});break;case\"S\":{let t=0,o=0;\"C\"===s||\"S\"===s?(t=n+(n-r),o=a+(a-i)):(t=n,o=a),e.push({key:\"C\",data:[t,o,...l]}),r=l[0],i=l[1],n=l[2],a=l[3];break}case\"T\":{const[t,o]=l;let h=0,c=0;\"Q\"===s||\"T\"===s?(h=n+(n-r),c=a+(a-i)):(h=n,c=a);const u=n+2*(h-n)/3,p=a+2*(c-a)/3,f=t+2*(h-t)/3,d=o+2*(c-o)/3;e.push({key:\"C\",data:[u,p,f,d,t,o]}),r=h,i=c,n=t,a=o;break}case\"Q\":{const[t,s,o,h]=l,c=n+2*(t-n)/3,u=a+2*(s-a)/3,p=o+2*(t-o)/3,f=h+2*(s-h)/3;e.push({key:\"C\",data:[c,u,p,f,o,h]}),r=t,i=s,n=o,a=h;break}case\"A\":{const t=Math.abs(l[0]),s=Math.abs(l[1]),o=l[2],h=l[3],r=l[4],i=l[5],c=l[6];if(0===t||0===s)e.push({key:\"C\",data:[n,a,i,c,i,c]}),n=i,a=c;else if(n!==i||a!==c){k(n,a,i,c,t,s,o,h,r).forEach((function(t){e.push({key:\"C\",data:t})})),n=i,a=c}break}case\"Z\":e.push({key:\"Z\",data:[]}),n=o,a=h}s=c}return e}function M(t,e,s){return[t*Math.cos(s)-e*Math.sin(s),t*Math.sin(s)+e*Math.cos(s)]}function k(t,e,s,n,a,o,h,r,i,c){const l=(u=h,Math.PI*u/180);var u;let p=[],f=0,d=0,g=0,b=0;if(c)[f,d,g,b]=c;else{[t,e]=M(t,e,-l),[s,n]=M(s,n,-l);const h=(t-s)/2,c=(e-n)/2;let u=h*h/(a*a)+c*c/(o*o);u>1&&(u=Math.sqrt(u),a*=u,o*=u);const p=a*a,k=o*o,y=p*k-p*c*c-k*h*h,m=p*c*c+k*h*h,w=(r===i?-1:1)*Math.sqrt(Math.abs(y/m));g=w*a*c/o+(t+s)/2,b=w*-o*h/a+(e+n)/2,f=Math.asin(parseFloat(((e-b)/o).toFixed(9))),d=Math.asin(parseFloat(((n-b)/o).toFixed(9))),t<g&&(f=Math.PI-f),s<g&&(d=Math.PI-d),f<0&&(f=2*Math.PI+f),d<0&&(d=2*Math.PI+d),i&&f>d&&(f-=2*Math.PI),!i&&d>f&&(d-=2*Math.PI)}let y=d-f;if(Math.abs(y)>120*Math.PI/180){const t=d,e=s,r=n;d=i&&d>f?f+120*Math.PI/180*1:f+120*Math.PI/180*-1,p=k(s=g+a*Math.cos(d),n=b+o*Math.sin(d),e,r,a,o,h,0,i,[d,t,g,b])}y=d-f;const m=Math.cos(f),w=Math.sin(f),x=Math.cos(d),P=Math.sin(d),v=Math.tan(y/4),O=4/3*a*v,S=4/3*o*v,L=[t,e],T=[t+O*w,e-S*m],D=[s+O*P,n-S*x],A=[s,n];if(T[0]=2*L[0]-T[0],T[1]=2*L[1]-T[1],c)return[T,D,A].concat(p);{p=[T,D,A].concat(p);const t=[];for(let e=0;e<p.length;e+=3){const s=M(p[e][0],p[e][1],l),n=M(p[e+1][0],p[e+1][1],l),a=M(p[e+2][0],p[e+2][1],l);t.push([s[0],s[1],n[0],n[1],a[0],a[1]])}return t}}const b={randOffset:function(t,e){return A(t,e)},randOffsetWithRange:function(t,e,s){return D(t,e,s)},ellipse:function(t,e,s,n,a){const o=P(s,n,a);return v(t,e,a,o).opset},doubleLineOps:function(t,e,s,n,a){return I(t,e,s,n,a,!0)}};function y(t,e,s,n,a){return{type:\"path\",ops:I(t,e,s,n,a)}}function m(t,e,s){const n=(t||[]).length;if(n>2){const a=[];for(let e=0;e<n-1;e++)a.push(...I(t[e][0],t[e][1],t[e+1][0],t[e+1][1],s));return e&&a.push(...I(t[n-1][0],t[n-1][1],t[0][0],t[0][1],s)),{type:\"path\",ops:a}}return 2===n?y(t[0][0],t[0][1],t[1][0],t[1][1],s):{type:\"path\",ops:[]}}function w(t,e,s,n,a){return function(t,e){return m(t,!0,e)}([[t,e],[t+s,e],[t+s,e+n],[t,e+n]],a)}function x(t,e){let s=_(t,1*(1+.2*e.roughness),e);if(!e.disableMultiStroke){const n=_(t,1.5*(1+.22*e.roughness),function(t){const e=Object.assign({},t);e.randomizer=void 0,t.seed&&(e.seed=t.seed+1);return e}(e));s=s.concat(n)}return{type:\"path\",ops:s}}function P(t,e,s){const n=Math.sqrt(2*Math.PI*Math.sqrt((Math.pow(t/2,2)+Math.pow(e/2,2))/2)),a=Math.ceil(Math.max(s.curveStepCount,s.curveStepCount/Math.sqrt(200)*n)),o=2*Math.PI/a;let h=Math.abs(t/2),r=Math.abs(e/2);const i=1-s.curveFitting;return h+=A(h*i,s),r+=A(r*i,s),{increment:o,rx:h,ry:r}}function v(t,e,s,n){const[a,o]=z(n.increment,t,e,n.rx,n.ry,1,n.increment*D(.1,D(.4,1,s),s),s);let h=W(a,null,s);if(!s.disableMultiStroke&&0!==s.roughness){const[a]=z(n.increment,t,e,n.rx,n.ry,1.5,0,s),o=W(a,null,s);h=h.concat(o)}return{estimatedPoints:o,opset:{type:\"path\",ops:h}}}function O(t,e,s,n,a,o,h,r,i){const c=t,l=e;let u=Math.abs(s/2),p=Math.abs(n/2);u+=A(.01*u,i),p+=A(.01*p,i);let f=a,d=o;for(;f<0;)f+=2*Math.PI,d+=2*Math.PI;d-f>2*Math.PI&&(f=0,d=2*Math.PI);const g=2*Math.PI/i.curveStepCount,M=Math.min(g/2,(d-f)/2),k=E(M,c,l,u,p,f,d,1,i);if(!i.disableMultiStroke){const t=E(M,c,l,u,p,f,d,1.5,i);k.push(...t)}return h&&(r?k.push(...I(c,l,c+u*Math.cos(f),l+p*Math.sin(f),i),...I(c,l,c+u*Math.cos(d),l+p*Math.sin(d),i)):k.push({op:\"lineTo\",data:[c,l]},{op:\"lineTo\",data:[c+u*Math.cos(f),l+p*Math.sin(f)]})),{type:\"path\",ops:k}}function S(t,e){const s=[];for(const n of t)if(n.length){const t=e.maxRandomnessOffset||0,a=n.length;if(a>2){s.push({op:\"move\",data:[n[0][0]+A(t,e),n[0][1]+A(t,e)]});for(let o=1;o<a;o++)s.push({op:\"lineTo\",data:[n[o][0]+A(t,e),n[o][1]+A(t,e)]})}}return{type:\"fillPath\",ops:s}}function L(t,e){return function(t,e){let s=t.fillStyle||\"hachure\";if(!c[s])switch(s){case\"zigzag\":c[s]||(c[s]=new a(e));break;case\"cross-hatch\":c[s]||(c[s]=new o(e));break;case\"dots\":c[s]||(c[s]=new h(e));break;case\"dashed\":c[s]||(c[s]=new r(e));break;case\"zigzag-line\":c[s]||(c[s]=new i(e));break;case\"hachure\":default:s=\"hachure\",c[s]||(c[s]=new n(e))}return c[s]}(e,b).fillPolygons(t,e)}function T(t){return t.randomizer||(t.randomizer=new l(t.seed||0)),t.randomizer.next()}function D(t,e,s,n=1){return s.roughness*n*(T(s)*(e-t)+t)}function A(t,e,s=1){return D(-t,t,e,s)}function I(t,e,s,n,a,o=!1){const h=o?a.disableMultiStrokeFill:a.disableMultiStroke,r=C(t,e,s,n,a,!0,!1);if(h)return r;const i=C(t,e,s,n,a,!0,!0);return r.concat(i)}function C(t,e,s,n,a,o,h){const r=Math.pow(t-s,2)+Math.pow(e-n,2),i=Math.sqrt(r);let c=1;c=i<200?1:i>500?.4:-.0016668*i+1.233334;let l=a.maxRandomnessOffset||0;l*l*100>r&&(l=i/10);const u=l/2,p=.2+.2*T(a);let f=a.bowing*a.maxRandomnessOffset*(n-e)/200,d=a.bowing*a.maxRandomnessOffset*(t-s)/200;f=A(f,a,c),d=A(d,a,c);const g=[],M=()=>A(u,a,c),k=()=>A(l,a,c),b=a.preserveVertices;return o&&(h?g.push({op:\"move\",data:[t+(b?0:M()),e+(b?0:M())]}):g.push({op:\"move\",data:[t+(b?0:A(l,a,c)),e+(b?0:A(l,a,c))]})),h?g.push({op:\"bcurveTo\",data:[f+t+(s-t)*p+M(),d+e+(n-e)*p+M(),f+t+2*(s-t)*p+M(),d+e+2*(n-e)*p+M(),s+(b?0:M()),n+(b?0:M())]}):g.push({op:\"bcurveTo\",data:[f+t+(s-t)*p+k(),d+e+(n-e)*p+k(),f+t+2*(s-t)*p+k(),d+e+2*(n-e)*p+k(),s+(b?0:k()),n+(b?0:k())]}),g}function _(t,e,s){const n=[];n.push([t[0][0]+A(e,s),t[0][1]+A(e,s)]),n.push([t[0][0]+A(e,s),t[0][1]+A(e,s)]);for(let a=1;a<t.length;a++)n.push([t[a][0]+A(e,s),t[a][1]+A(e,s)]),a===t.length-1&&n.push([t[a][0]+A(e,s),t[a][1]+A(e,s)]);return W(n,null,s)}function W(t,e,s){const n=t.length,a=[];if(n>3){const o=[],h=1-s.curveTightness;a.push({op:\"move\",data:[t[1][0],t[1][1]]});for(let e=1;e+2<n;e++){const s=t[e];o[0]=[s[0],s[1]],o[1]=[s[0]+(h*t[e+1][0]-h*t[e-1][0])/6,s[1]+(h*t[e+1][1]-h*t[e-1][1])/6],o[2]=[t[e+1][0]+(h*t[e][0]-h*t[e+2][0])/6,t[e+1][1]+(h*t[e][1]-h*t[e+2][1])/6],o[3]=[t[e+1][0],t[e+1][1]],a.push({op:\"bcurveTo\",data:[o[1][0],o[1][1],o[2][0],o[2][1],o[3][0],o[3][1]]})}if(e&&2===e.length){const t=s.maxRandomnessOffset;a.push({op:\"lineTo\",data:[e[0]+A(t,s),e[1]+A(t,s)]})}}else 3===n?(a.push({op:\"move\",data:[t[1][0],t[1][1]]}),a.push({op:\"bcurveTo\",data:[t[1][0],t[1][1],t[2][0],t[2][1],t[2][0],t[2][1]]})):2===n&&a.push(...I(t[0][0],t[0][1],t[1][0],t[1][1],s));return a}function z(t,e,s,n,a,o,h,r){const i=[],c=[];if(0===r.roughness){t/=4,c.push([e+n*Math.cos(-t),s+a*Math.sin(-t)]);for(let o=0;o<=2*Math.PI;o+=t){const t=[e+n*Math.cos(o),s+a*Math.sin(o)];i.push(t),c.push(t)}c.push([e+n*Math.cos(0),s+a*Math.sin(0)]),c.push([e+n*Math.cos(t),s+a*Math.sin(t)])}else{const l=A(.5,r)-Math.PI/2;c.push([A(o,r)+e+.9*n*Math.cos(l-t),A(o,r)+s+.9*a*Math.sin(l-t)]);const u=2*Math.PI+l-.01;for(let h=l;h<u;h+=t){const t=[A(o,r)+e+n*Math.cos(h),A(o,r)+s+a*Math.sin(h)];i.push(t),c.push(t)}c.push([A(o,r)+e+n*Math.cos(l+2*Math.PI+.5*h),A(o,r)+s+a*Math.sin(l+2*Math.PI+.5*h)]),c.push([A(o,r)+e+.98*n*Math.cos(l+h),A(o,r)+s+.98*a*Math.sin(l+h)]),c.push([A(o,r)+e+.9*n*Math.cos(l+.5*h),A(o,r)+s+.9*a*Math.sin(l+.5*h)])}return[c,i]}function E(t,e,s,n,a,o,h,r,i){const c=o+A(.1,i),l=[];l.push([A(r,i)+e+.9*n*Math.cos(c-t),A(r,i)+s+.9*a*Math.sin(c-t)]);for(let o=c;o<=h;o+=t)l.push([A(r,i)+e+n*Math.cos(o),A(r,i)+s+a*Math.sin(o)]);return l.push([e+n*Math.cos(h),s+a*Math.sin(h)]),l.push([e+n*Math.cos(h),s+a*Math.sin(h)]),W(l,null,i)}function $(t,e,s,n,a,o,h,r){const i=[],c=[r.maxRandomnessOffset||1,(r.maxRandomnessOffset||1)+.3];let l=[0,0];const u=r.disableMultiStroke?1:2,p=r.preserveVertices;for(let f=0;f<u;f++)0===f?i.push({op:\"move\",data:[h[0],h[1]]}):i.push({op:\"move\",data:[h[0]+(p?0:A(c[0],r)),h[1]+(p?0:A(c[0],r))]}),l=p?[a,o]:[a+A(c[f],r),o+A(c[f],r)],i.push({op:\"bcurveTo\",data:[t+A(c[f],r),e+A(c[f],r),s+A(c[f],r),n+A(c[f],r),l[0],l[1]]});return i}function G(t){return[...t]}function R(t,e){return Math.pow(t[0]-e[0],2)+Math.pow(t[1]-e[1],2)}function q(t,e,s){const n=R(e,s);if(0===n)return R(t,e);let a=((t[0]-e[0])*(s[0]-e[0])+(t[1]-e[1])*(s[1]-e[1]))/n;return a=Math.max(0,Math.min(1,a)),R(t,j(e,s,a))}function j(t,e,s){return[t[0]+(e[0]-t[0])*s,t[1]+(e[1]-t[1])*s]}function F(t,e,s,n){const a=n||[];if(function(t,e){const s=t[e+0],n=t[e+1],a=t[e+2],o=t[e+3];let h=3*n[0]-2*s[0]-o[0];h*=h;let r=3*n[1]-2*s[1]-o[1];r*=r;let i=3*a[0]-2*o[0]-s[0];i*=i;let c=3*a[1]-2*o[1]-s[1];return c*=c,h<i&&(h=i),r<c&&(r=c),h+r}(t,e)<s){const s=t[e+0];if(a.length){(o=a[a.length-1],h=s,Math.sqrt(R(o,h)))>1&&a.push(s)}else a.push(s);a.push(t[e+3])}else{const n=.5,o=t[e+0],h=t[e+1],r=t[e+2],i=t[e+3],c=j(o,h,n),l=j(h,r,n),u=j(r,i,n),p=j(c,l,n),f=j(l,u,n),d=j(p,f,n);F([o,c,p,d],0,s,a),F([d,f,u,i],0,s,a)}var o,h;return a}function V(t,e){return Z(t,0,t.length,e)}function Z(t,e,s,n,a){const o=a||[],h=t[e],r=t[s-1];let i=0,c=1;for(let n=e+1;n<s-1;++n){const e=q(t[n],h,r);e>i&&(i=e,c=n)}return Math.sqrt(i)>n?(Z(t,e,c+1,n,o),Z(t,c,s,n,o)):(o.length||o.push(h),o.push(r)),o}function Q(t,e=.15,s){const n=[],a=(t.length-1)/3;for(let s=0;s<a;s++){F(t,3*s,e,n)}return s&&s>0?Z(n,0,n.length,s):n}const H=\"none\";class N{constructor(t){this.defaultOptions={maxRandomnessOffset:2,roughness:1,bowing:1,stroke:\"#000\",strokeWidth:1,curveTightness:0,curveFitting:.95,curveStepCount:9,fillStyle:\"hachure\",fillWeight:-1,hachureAngle:-41,hachureGap:-1,dashOffset:-1,dashGap:-1,zigzagOffset:-1,seed:0,disableMultiStroke:!1,disableMultiStrokeFill:!1,preserveVertices:!1},this.config=t||{},this.config.options&&(this.defaultOptions=this._o(this.config.options))}static newSeed(){return Math.floor(Math.random()*2**31)}_o(t){return t?Object.assign({},this.defaultOptions,t):this.defaultOptions}_d(t,e,s){return{shape:t,sets:e||[],options:s||this.defaultOptions}}line(t,e,s,n,a){const o=this._o(a);return this._d(\"line\",[y(t,e,s,n,o)],o)}rectangle(t,e,s,n,a){const o=this._o(a),h=[],r=w(t,e,s,n,o);if(o.fill){const a=[[t,e],[t+s,e],[t+s,e+n],[t,e+n]];\"solid\"===o.fillStyle?h.push(S([a],o)):h.push(L([a],o))}return o.stroke!==H&&h.push(r),this._d(\"rectangle\",h,o)}ellipse(t,e,s,n,a){const o=this._o(a),h=[],r=P(s,n,o),i=v(t,e,o,r);if(o.fill)if(\"solid\"===o.fillStyle){const s=v(t,e,o,r).opset;s.type=\"fillPath\",h.push(s)}else h.push(L([i.estimatedPoints],o));return o.stroke!==H&&h.push(i.opset),this._d(\"ellipse\",h,o)}circle(t,e,s,n){const a=this.ellipse(t,e,s,s,n);return a.shape=\"circle\",a}linearPath(t,e){const s=this._o(e);return this._d(\"linearPath\",[m(t,!1,s)],s)}arc(t,e,s,n,a,o,h=!1,r){const i=this._o(r),c=[],l=O(t,e,s,n,a,o,h,!0,i);if(h&&i.fill)if(\"solid\"===i.fillStyle){const h=Object.assign({},i);h.disableMultiStroke=!0;const r=O(t,e,s,n,a,o,!0,!1,h);r.type=\"fillPath\",c.push(r)}else c.push(function(t,e,s,n,a,o,h){const r=t,i=e;let c=Math.abs(s/2),l=Math.abs(n/2);c+=A(.01*c,h),l+=A(.01*l,h);let u=a,p=o;for(;u<0;)u+=2*Math.PI,p+=2*Math.PI;p-u>2*Math.PI&&(u=0,p=2*Math.PI);const f=(p-u)/h.curveStepCount,d=[];for(let t=u;t<=p;t+=f)d.push([r+c*Math.cos(t),i+l*Math.sin(t)]);return d.push([r+c*Math.cos(p),i+l*Math.sin(p)]),d.push([r,i]),L([d],h)}(t,e,s,n,a,o,i));return i.stroke!==H&&c.push(l),this._d(\"arc\",c,i)}curve(t,e){const s=this._o(e),n=[],a=x(t,s);if(s.fill&&s.fill!==H&&t.length>=3){const e=Q(function(t,e=0){const s=t.length;if(s<3)throw new Error(\"A curve must have at least three points.\");const n=[];if(3===s)n.push(G(t[0]),G(t[1]),G(t[2]),G(t[2]));else{const s=[];s.push(t[0],t[0]);for(let e=1;e<t.length;e++)s.push(t[e]),e===t.length-1&&s.push(t[e]);const a=[],o=1-e;n.push(G(s[0]));for(let t=1;t+2<s.length;t++){const e=s[t];a[0]=[e[0],e[1]],a[1]=[e[0]+(o*s[t+1][0]-o*s[t-1][0])/6,e[1]+(o*s[t+1][1]-o*s[t-1][1])/6],a[2]=[s[t+1][0]+(o*s[t][0]-o*s[t+2][0])/6,s[t+1][1]+(o*s[t][1]-o*s[t+2][1])/6],a[3]=[s[t+1][0],s[t+1][1]],n.push(a[1],a[2],a[3])}}return n}(t),10,(1+s.roughness)/2);\"solid\"===s.fillStyle?n.push(S([e],s)):n.push(L([e],s))}return s.stroke!==H&&n.push(a),this._d(\"curve\",n,s)}polygon(t,e){const s=this._o(e),n=[],a=m(t,!0,s);return s.fill&&(\"solid\"===s.fillStyle?n.push(S([t],s)):n.push(L([t],s))),s.stroke!==H&&n.push(a),this._d(\"polygon\",n,s)}path(t,e){const s=this._o(e),n=[];if(!t)return this._d(\"path\",n,s);t=(t||\"\").replace(/\\n/g,\" \").replace(/(-\\s)/g,\"-\").replace(\"/(ss)/g\",\" \");const a=s.fill&&\"transparent\"!==s.fill&&s.fill!==H,o=s.stroke!==H,h=!!(s.simplification&&s.simplification<1),r=function(t,e,s){const n=g(d(f(t))),a=[];let o=[],h=[0,0],r=[];const i=()=>{r.length>=4&&o.push(...Q(r,e)),r=[]},c=()=>{i(),o.length&&(a.push(o),o=[])};for(const{key:t,data:e}of n)switch(t){case\"M\":c(),h=[e[0],e[1]],o.push(h);break;case\"L\":i(),o.push([e[0],e[1]]);break;case\"C\":if(!r.length){const t=o.length?o[o.length-1]:h;r.push([t[0],t[1]])}r.push([e[0],e[1]]),r.push([e[2],e[3]]),r.push([e[4],e[5]]);break;case\"Z\":i(),o.push([h[0],h[1]])}if(c(),!s)return a;const l=[];for(const t of a){const e=V(t,s);e.length&&l.push(e)}return l}(t,1,h?4-4*s.simplification:(1+s.roughness)/2);return a&&(\"solid\"===s.fillStyle?n.push(S(r,s)):n.push(L(r,s))),o&&(h?r.forEach((t=>{n.push(m(t,!1,s))})):n.push(function(t,e){const s=g(d(f(t))),n=[];let a=[0,0],o=[0,0];for(const{key:t,data:h}of s)switch(t){case\"M\":{const t=1*(e.maxRandomnessOffset||0),s=e.preserveVertices;n.push({op:\"move\",data:h.map((n=>n+(s?0:A(t,e))))}),o=[h[0],h[1]],a=[h[0],h[1]];break}case\"L\":n.push(...I(o[0],o[1],h[0],h[1],e)),o=[h[0],h[1]];break;case\"C\":{const[t,s,a,r,i,c]=h;n.push(...$(t,s,a,r,i,c,o,e)),o=[i,c];break}case\"Z\":n.push(...I(o[0],o[1],a[0],a[1],e)),o=[a[0],a[1]]}return{type:\"path\",ops:n}}(t,s))),this._d(\"path\",n,s)}opsToPath(t,e){let s=\"\";for(const n of t.ops){const t=\"number\"==typeof e&&e>=0?n.data.map((t=>+t.toFixed(e))):n.data;switch(n.op){case\"move\":s+=`M${t[0]} ${t[1]} `;break;case\"bcurveTo\":s+=`C${t[0]} ${t[1]}, ${t[2]} ${t[3]}, ${t[4]} ${t[5]} `;break;case\"lineTo\":s+=`L${t[0]} ${t[1]} `}}return s.trim()}toPaths(t){const e=t.sets||[],s=t.options||this.defaultOptions,n=[];for(const t of e){let e=null;switch(t.type){case\"path\":e={d:this.opsToPath(t),stroke:s.stroke,strokeWidth:s.strokeWidth,fill:H};break;case\"fillPath\":e={d:this.opsToPath(t),stroke:H,strokeWidth:0,fill:s.fill||H};break;case\"fillSketch\":e=this.fillSketch(t,s)}e&&n.push(e)}return n}fillSketch(t,e){let s=e.fillWeight;return s<0&&(s=e.strokeWidth/2),{d:this.opsToPath(t),stroke:e.fill||H,strokeWidth:s,fill:H}}}class B{constructor(t,e){this.canvas=t,this.ctx=this.canvas.getContext(\"2d\"),this.gen=new N(e)}draw(t){const e=t.sets||[],s=t.options||this.getDefaultOptions(),n=this.ctx,a=t.options.fixedDecimalPlaceDigits;for(const o of e)switch(o.type){case\"path\":n.save(),n.strokeStyle=\"none\"===s.stroke?\"transparent\":s.stroke,n.lineWidth=s.strokeWidth,s.strokeLineDash&&n.setLineDash(s.strokeLineDash),s.strokeLineDashOffset&&(n.lineDashOffset=s.strokeLineDashOffset),this._drawToContext(n,o,a),n.restore();break;case\"fillPath\":{n.save(),n.fillStyle=s.fill||\"\";const e=\"curve\"===t.shape||\"polygon\"===t.shape||\"path\"===t.shape?\"evenodd\":\"nonzero\";this._drawToContext(n,o,a,e),n.restore();break}case\"fillSketch\":this.fillSketch(n,o,s)}}fillSketch(t,e,s){let n=s.fillWeight;n<0&&(n=s.strokeWidth/2),t.save(),s.fillLineDash&&t.setLineDash(s.fillLineDash),s.fillLineDashOffset&&(t.lineDashOffset=s.fillLineDashOffset),t.strokeStyle=s.fill||\"\",t.lineWidth=n,this._drawToContext(t,e,s.fixedDecimalPlaceDigits),t.restore()}_drawToContext(t,e,s,n=\"nonzero\"){t.beginPath();for(const n of e.ops){const e=\"number\"==typeof s&&s>=0?n.data.map((t=>+t.toFixed(s))):n.data;switch(n.op){case\"move\":t.moveTo(e[0],e[1]);break;case\"bcurveTo\":t.bezierCurveTo(e[0],e[1],e[2],e[3],e[4],e[5]);break;case\"lineTo\":t.lineTo(e[0],e[1])}}\"fillPath\"===e.type?t.fill(n):t.stroke()}get generator(){return this.gen}getDefaultOptions(){return this.gen.defaultOptions}line(t,e,s,n,a){const o=this.gen.line(t,e,s,n,a);return this.draw(o),o}rectangle(t,e,s,n,a){const o=this.gen.rectangle(t,e,s,n,a);return this.draw(o),o}ellipse(t,e,s,n,a){const o=this.gen.ellipse(t,e,s,n,a);return this.draw(o),o}circle(t,e,s,n){const a=this.gen.circle(t,e,s,n);return this.draw(a),a}linearPath(t,e){const s=this.gen.linearPath(t,e);return this.draw(s),s}polygon(t,e){const s=this.gen.polygon(t,e);return this.draw(s),s}arc(t,e,s,n,a,o,h=!1,r){const i=this.gen.arc(t,e,s,n,a,o,h,r);return this.draw(i),i}curve(t,e){const s=this.gen.curve(t,e);return this.draw(s),s}path(t,e){const s=this.gen.path(t,e);return this.draw(s),s}}const J=\"http://www.w3.org/2000/svg\";class K{constructor(t,e){this.svg=t,this.gen=new N(e)}draw(t){const e=t.sets||[],s=t.options||this.getDefaultOptions(),n=this.svg.ownerDocument||window.document,a=n.createElementNS(J,\"g\"),o=t.options.fixedDecimalPlaceDigits;for(const h of e){let e=null;switch(h.type){case\"path\":e=n.createElementNS(J,\"path\"),e.setAttribute(\"d\",this.opsToPath(h,o)),e.setAttribute(\"stroke\",s.stroke),e.setAttribute(\"stroke-width\",s.strokeWidth+\"\"),e.setAttribute(\"fill\",\"none\"),s.strokeLineDash&&e.setAttribute(\"stroke-dasharray\",s.strokeLineDash.join(\" \").trim()),s.strokeLineDashOffset&&e.setAttribute(\"stroke-dashoffset\",`${s.strokeLineDashOffset}`);break;case\"fillPath\":e=n.createElementNS(J,\"path\"),e.setAttribute(\"d\",this.opsToPath(h,o)),e.setAttribute(\"stroke\",\"none\"),e.setAttribute(\"stroke-width\",\"0\"),e.setAttribute(\"fill\",s.fill||\"\"),\"curve\"!==t.shape&&\"polygon\"!==t.shape||e.setAttribute(\"fill-rule\",\"evenodd\");break;case\"fillSketch\":e=this.fillSketch(n,h,s)}e&&a.appendChild(e)}return a}fillSketch(t,e,s){let n=s.fillWeight;n<0&&(n=s.strokeWidth/2);const a=t.createElementNS(J,\"path\");return a.setAttribute(\"d\",this.opsToPath(e,s.fixedDecimalPlaceDigits)),a.setAttribute(\"stroke\",s.fill||\"\"),a.setAttribute(\"stroke-width\",n+\"\"),a.setAttribute(\"fill\",\"none\"),s.fillLineDash&&a.setAttribute(\"stroke-dasharray\",s.fillLineDash.join(\" \").trim()),s.fillLineDashOffset&&a.setAttribute(\"stroke-dashoffset\",`${s.fillLineDashOffset}`),a}get generator(){return this.gen}getDefaultOptions(){return this.gen.defaultOptions}opsToPath(t,e){return this.gen.opsToPath(t,e)}line(t,e,s,n,a){const o=this.gen.line(t,e,s,n,a);return this.draw(o)}rectangle(t,e,s,n,a){const o=this.gen.rectangle(t,e,s,n,a);return this.draw(o)}ellipse(t,e,s,n,a){const o=this.gen.ellipse(t,e,s,n,a);return this.draw(o)}circle(t,e,s,n){const a=this.gen.circle(t,e,s,n);return this.draw(a)}linearPath(t,e){const s=this.gen.linearPath(t,e);return this.draw(s)}polygon(t,e){const s=this.gen.polygon(t,e);return this.draw(s)}arc(t,e,s,n,a,o,h=!1,r){const i=this.gen.arc(t,e,s,n,a,o,h,r);return this.draw(i)}curve(t,e){const s=this.gen.curve(t,e);return this.draw(s)}path(t,e){const s=this.gen.path(t,e);return this.draw(s)}}var U={canvas:(t,e)=>new B(t,e),svg:(t,e)=>new K(t,e),generator:t=>new N(t),newSeed:()=>N.newSeed()};export{U as default};\n", "export function squaredEuclidean(p, q) {\r\n    let d = 0;\r\n    for (let i = 0; i < p.length; i++) {\r\n        d += (p[i] - q[i]) * (p[i] - q[i]);\r\n    }\r\n    return d;\r\n}\r\nexport function euclidean(p, q) {\r\n    return Math.sqrt(squaredEuclidean(p, q));\r\n}\r\n", "/**\n * Computes a distance/similarity matrix given an array of data and a distance/similarity function.\n * @param {Array} data An array of data\n * @param {function} distanceFn  A function that accepts two arguments and computes a distance/similarity between them\n * @return {Array<Array>} The distance/similarity matrix. The matrix is square and has a size equal to the length of\n * the data array\n */\nexport default function distanceMatrix(data, distanceFn) {\n  const result = getMatrix(data.length);\n\n  // Compute upper distance matrix\n  for (let i = 0; i < data.length; i++) {\n    for (let j = 0; j <= i; j++) {\n      result[i][j] = distanceFn(data[i], data[j]);\n      result[j][i] = result[i][j];\n    }\n  }\n\n  return result;\n}\n\nfunction getMatrix(size) {\n  const matrix = [];\n  for (let i = 0; i < size; i++) {\n    const row = [];\n    matrix.push(row);\n    for (let j = 0; j < size; j++) {\n      row.push(0);\n    }\n  }\n  return matrix;\n}\n", "const toString = Object.prototype.toString;\n\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n", "import isArray from 'is-any-array';\n\nfunction max(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var maxValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n", "import isArray from 'is-any-array';\n\nfunction min(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var minValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport default min;\n", "import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport { rescale as default };\n", "const indent = ' '.repeat(2);\nconst indentData = ' '.repeat(4);\n\nexport function inspectMatrix() {\n  return inspectMatrixWithOptions(this);\n}\n\nexport function inspectMatrixWithOptions(matrix, options = {}) {\n  const { maxRows = 15, maxColumns = 10, maxNumSize = 8 } = options;\n  return `${matrix.constructor.name} {\n${indent}[\n${indentData}${inspectData(matrix, maxRows, maxColumns, maxNumSize)}\n${indent}]\n${indent}rows: ${matrix.rows}\n${indent}columns: ${matrix.columns}\n}`;\n}\n\nfunction inspectData(matrix, maxRows, maxColumns, maxNumSize) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j), maxNumSize));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indentData}`);\n}\n\nfunction formatNumber(num, maxNumSize) {\n  const numStr = String(num);\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n  const precise = num.toPrecision(maxNumSize - 2);\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n  const exponential = num.toExponential(maxNumSize - 2);\n  const eIndex = exponential.indexOf('e');\n  const e = exponential.slice(eIndex);\n  return exponential.slice(0, maxNumSize - e.length) + e;\n}\n", "export function installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, ~(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), value));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\n      }\n    }\n    return this;\n  };\n}\n", "/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices),\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  let rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  let columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n\nexport function checkNonEmpty(matrix) {\n  if (matrix.isEmpty()) {\n    throw new Error('Empty matrix has no elements to index');\n  }\n}\n", "import { newArray } from './util';\n\nexport function sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nexport function varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nexport function varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nexport function centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nexport function centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nexport function centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nexport function getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nexport function getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nexport function getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nexport function scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n", "import rescale from 'ml-array-rescale';\n\nimport { inspectMatrix, inspectMatrixWithOptions } from './inspect';\nimport { installMathOperations } from './mathOperations';\nimport {\n  sumByRow,\n  sumByColumn,\n  sumAll,\n  productByRow,\n  productByColumn,\n  productAll,\n  varianceByRow,\n  varianceByColumn,\n  varianceAll,\n  centerByRow,\n  centerByColumn,\n  centerAll,\n  scaleByRow,\n  scaleByColumn,\n  scaleAll,\n  getScaleByRow,\n  getScaleByColumn,\n  getScaleAll,\n} from './stat';\nimport {\n  checkRowVector,\n  checkRowIndex,\n  checkColumnIndex,\n  checkColumnVector,\n  checkRange,\n  checkIndices,\n  checkNonEmpty,\n} from './util';\n\nexport class AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isEmpty() {\n    return this.rows === 0 || this.columns === 0;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max() {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  maxIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min() {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  minIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      if (row.length > 0) {\n        rescale(row, { min, max, output: row });\n      }\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      if (column.length) {\n        rescale(column, {\n          min: min,\n          max: max,\n          output: column,\n        });\n      }\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  kroneckerSum(other) {\n    other = Matrix.checkMatrix(other);\n    if (!this.isSquare() || !other.isSquare()) {\n      throw new Error('Kronecker Sum needs two Square Matrices');\n    }\n    let m = this.rows;\n    let n = other.rows;\n    let AxI = this.kroneckerProduct(Matrix.eye(n, n));\n    let IxB = Matrix.eye(m, m).kroneckerProduct(other);\n    return AxI.add(IxB);\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (matrix.isEmpty()) {\n      return this;\n    }\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    let indices = checkIndices(this, rowIndices, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < indices.row.length; i++) {\n      let rowIndex = indices.row[i];\n      for (let j = 0; j < indices.column.length; j++) {\n        let columnIndex = indices.column[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  toString(options) {\n    return inspectMatrixWithOptions(this, options);\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[Symbol.for('nodejs.util.inspect.custom')] =\n    inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nexport default class Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      // eslint-disable-next-line no-constructor-return\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows >= 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns >= 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = nRows ? arrayData[0].length : 0;\n      if (typeof nColumns !== 'number') {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n", "import Heap from 'heap';\n\nexport default class Cluster {\n  constructor() {\n    this.children = [];\n    this.height = 0;\n    this.size = 1;\n    this.index = -1;\n    this.isLeaf = false;\n  }\n\n  /**\n   * Creates an array of clusters where the maximum height is smaller than the threshold\n   * @param {number} threshold\n   * @return {Array<Cluster>}\n   */\n  cut(threshold) {\n    if (typeof threshold !== 'number') {\n      throw new TypeError('threshold must be a number');\n    }\n    if (threshold < 0) {\n      throw new RangeError('threshold must be a positive number');\n    }\n    let list = [this];\n    const ans = [];\n    while (list.length > 0) {\n      const aux = list.shift();\n      if (threshold >= aux.height) {\n        ans.push(aux);\n      } else {\n        list = list.concat(aux.children);\n      }\n    }\n    return ans;\n  }\n\n  /**\n   * Merge the leaves in the minimum way to have `groups` number of clusters.\n   * @param {number} groups - Them number of children the first level of the tree should have.\n   * @return {Cluster}\n   */\n  group(groups) {\n    if (!Number.isInteger(groups) || groups < 1) {\n      throw new RangeError('groups must be a positive integer');\n    }\n\n    const heap = new Heap((a, b) => {\n      return b.height - a.height;\n    });\n\n    heap.push(this);\n\n    while (heap.size() < groups) {\n      const first = heap.pop();\n      if (first.children.length === 0) {\n        break;\n      }\n      first.children.forEach((child) => heap.push(child));\n    }\n\n    const root = new Cluster();\n    root.children = heap.toArray();\n    root.height = this.height;\n\n    return root;\n  }\n\n  /**\n   * Traverses the tree depth-first and calls the provided callback with each individual node\n   * @param {function} cb - The callback to be called on each node encounter\n   */\n  traverse(cb) {\n    function visit(root, callback) {\n      callback(root);\n      if (root.children) {\n        for (const child of root.children) {\n          visit(child, callback);\n        }\n      }\n    }\n    visit(this, cb);\n  }\n\n  /**\n   * Returns a list of indices for all the leaves of this cluster.\n   * The list is ordered in such a way that a dendrogram could be drawn without crossing branches.\n   * @returns {Array<number>}\n   */\n  indices() {\n    const result = [];\n    this.traverse((cluster) => {\n      if (cluster.isLeaf) {\n        result.push(cluster.index);\n      }\n    });\n    return result;\n  }\n}\n", "import { euclidean } from 'ml-distance-euclidean';\nimport getDistanceMatrix from 'ml-distance-matrix';\nimport { Matrix } from 'ml-matrix';\n\nimport Cluster from './Cluster';\n\nfunction singleLink(dKI, dKJ) {\n  return Math.min(dKI, dKJ);\n}\n\nfunction completeLink(dKI, dKJ) {\n  return Math.max(dKI, dKJ);\n}\n\nfunction averageLink(dKI, dKJ, dIJ, ni, nj) {\n  const ai = ni / (ni + nj);\n  const aj = nj / (ni + nj);\n  return ai * dKI + aj * dKJ;\n}\n\nfunction weightedAverageLink(dKI, dKJ) {\n  return (dKI + dKJ) / 2;\n}\n\nfunction centroidLink(dKI, dKJ, dIJ, ni, nj) {\n  const ai = ni / (ni + nj);\n  const aj = nj / (ni + nj);\n  const b = -(ni * nj) / (ni + nj) ** 2;\n  return ai * dKI + aj * dKJ + b * dIJ;\n}\n\nfunction medianLink(dKI, dKJ, dIJ) {\n  return dKI / 2 + dKJ / 2 - dIJ / 4;\n}\n\nfunction wardLink(dKI, dKJ, dIJ, ni, nj, nk) {\n  const ai = (ni + nk) / (ni + nj + nk);\n  const aj = (nj + nk) / (ni + nj + nk);\n  const b = -nk / (ni + nj + nk);\n  return ai * dKI + aj * dKJ + b * dIJ;\n}\n\nfunction wardLink2(dKI, dKJ, dIJ, ni, nj, nk) {\n  const ai = (ni + nk) / (ni + nj + nk);\n  const aj = (nj + nk) / (ni + nj + nk);\n  const b = -nk / (ni + nj + nk);\n  return Math.sqrt(ai * dKI * dKI + aj * dKJ * dKJ + b * dIJ * dIJ);\n}\n\n/**\n * Continuously merge nodes that have the least dissimilarity\n * @param {Array<Array<number>>} data - Array of points to be clustered\n * @param {object} [options]\n * @param {Function} [options.distanceFunction]\n * @param {string} [options.method] - Default: `'complete'`\n * @param {boolean} [options.isDistanceMatrix] - Is the input already a distance matrix?\n * @constructor\n */\nexport function agnes(data, options = {}) {\n  const {\n    distanceFunction = euclidean,\n    method = 'complete',\n    isDistanceMatrix = false,\n  } = options;\n\n  let updateFunc;\n  if (!isDistanceMatrix) {\n    data = getDistanceMatrix(data, distanceFunction);\n  }\n  let distanceMatrix = new Matrix(data);\n  const numLeaves = distanceMatrix.rows;\n\n  // allows to use a string or a given function\n  if (typeof method === 'string') {\n    switch (method.toLowerCase()) {\n      case 'single':\n        updateFunc = singleLink;\n        break;\n      case 'complete':\n        updateFunc = completeLink;\n        break;\n      case 'average':\n      case 'upgma':\n        updateFunc = averageLink;\n        break;\n      case 'wpgma':\n        updateFunc = weightedAverageLink;\n        break;\n      case 'centroid':\n      case 'upgmc':\n        updateFunc = centroidLink;\n        break;\n      case 'median':\n      case 'wpgmc':\n        updateFunc = medianLink;\n        break;\n      case 'ward':\n        updateFunc = wardLink;\n        break;\n      case 'ward2':\n        updateFunc = wardLink2;\n        break;\n      default:\n        throw new RangeError(`unknown clustering method: ${method}`);\n    }\n  } else if (typeof method !== 'function') {\n    throw new TypeError('method must be a string or function');\n  }\n\n  let clusters = [];\n  for (let i = 0; i < numLeaves; i++) {\n    const cluster = new Cluster();\n    cluster.isLeaf = true;\n    cluster.index = i;\n    clusters.push(cluster);\n  }\n\n  for (let n = 0; n < numLeaves - 1; n++) {\n    const [row, column, distance] = getSmallestDistance(distanceMatrix);\n    const cluster1 = clusters[row];\n    const cluster2 = clusters[column];\n    const newCluster = new Cluster();\n    newCluster.size = cluster1.size + cluster2.size;\n    newCluster.children.push(cluster1, cluster2);\n    newCluster.height = distance;\n\n    const newClusters = [newCluster];\n    const newDistanceMatrix = new Matrix(\n      distanceMatrix.rows - 1,\n      distanceMatrix.rows - 1,\n    );\n    const previous = (newIndex) =>\n      getPreviousIndex(newIndex, Math.min(row, column), Math.max(row, column));\n\n    for (let i = 1; i < newDistanceMatrix.rows; i++) {\n      const prevI = previous(i);\n      const prevICluster = clusters[prevI];\n      newClusters.push(prevICluster);\n      for (let j = 0; j < i; j++) {\n        if (j === 0) {\n          const dKI = distanceMatrix.get(row, prevI);\n          const dKJ = distanceMatrix.get(prevI, column);\n          const val = updateFunc(\n            dKI,\n            dKJ,\n            distance,\n            cluster1.size,\n            cluster2.size,\n            prevICluster.size,\n          );\n          newDistanceMatrix.set(i, j, val);\n          newDistanceMatrix.set(j, i, val);\n        } else {\n          // Just copy distance from previous matrix\n          const val = distanceMatrix.get(prevI, previous(j));\n          newDistanceMatrix.set(i, j, val);\n          newDistanceMatrix.set(j, i, val);\n        }\n      }\n    }\n\n    clusters = newClusters;\n    distanceMatrix = newDistanceMatrix;\n  }\n\n  return clusters[0];\n}\n\nfunction getSmallestDistance(distance) {\n  let smallest = Infinity;\n  let smallestI = 0;\n  let smallestJ = 0;\n  for (let i = 1; i < distance.rows; i++) {\n    for (let j = 0; j < i; j++) {\n      if (distance.get(i, j) < smallest) {\n        smallest = distance.get(i, j);\n        smallestI = i;\n        smallestJ = j;\n      }\n    }\n  }\n  return [smallestI, smallestJ, smallest];\n}\n\nfunction getPreviousIndex(newIndex, prev1, prev2) {\n  newIndex -= 1;\n  if (newIndex >= prev1) newIndex++;\n  if (newIndex >= prev2) newIndex++;\n  return newIndex;\n}\n", "export const $ = (selector, scope = document) => scope.querySelector(selector);\n\nexport const round = x => x.toFixed(2);\n\nexport const M = (rows, cols, v = 0) =>\n    Array(rows)\n        .fill(null)\n        .map(() => Array(cols).fill(v));\n\nexport const V = (n, v = 0) => Array(n).fill(v);\n\nexport const minMax = arr => [Math.min(...arr), Math.max(...arr)];\n\nexport const avg = arr => arr.reduce((a, b) => a + b, 0) / arr.length;\n\nexport function createCanvas(size) {\n    const $canvas = document.createElement('canvas');\n    $canvas.width = size;\n    $canvas.height = size;\n    $canvas.style.width = `${size}px`;\n    $canvas.style.height = `${size}px`;\n    document.body.appendChild($canvas);\n    return $canvas;\n}\n\nexport function text(ctx, x, y, text) {\n    ctx.font = \"12px '72', Arial, sans-serif\";\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillText(text, x, y);\n}\n\nexport function maxDepth(tree) {\n    if (tree.children.length === 0) return 0;\n    return Math.max(...tree.children.map(c => maxDepth(c) + 1));\n}\n\nexport function findLimits(points) {\n    let minX = Infinity,\n        maxX = -Infinity,\n        minY = Infinity,\n        maxY = -Infinity,\n        minZ = Infinity,\n        maxZ = -Infinity;\n\n    for (const p of points) {\n        const x = p.x;\n        const y = p.y;\n        const z = p.z;\n\n        if (x < minX) minX = x;\n        if (x > maxX) maxX = x;\n        if (y < minY) minY = y;\n        if (y > maxY) maxY = y;\n        if (z < minZ) minZ = z;\n        if (z > maxZ) maxZ = z;\n    }\n\n    return { minX, minY, minZ, maxX, maxY, maxZ };\n}\n\nexport function unionLimits(a, b) {\n    return {\n        minX: Math.min(a.minX, b.minX),\n        minY: Math.min(a.minY, b.minY),\n        minZ: Math.min(a.minZ, b.minZ),\n        maxX: Math.max(a.maxX, b.maxX),\n        maxY: Math.max(a.maxY, b.maxY),\n        maxZ: Math.max(a.maxZ, b.maxZ),\n    };\n}\n\nexport function normalize(arr) {\n    const [min, max] = minMax(arr);\n    const d = max - min;\n    return arr.map(x => (x - min) / d);\n}\n\nexport function normalizeByColumn(mat) {\n    const xs = normalize(mat.map(v => v[0]));\n    const ys = normalize(mat.map(v => v[1]));\n    const zs = normalize(mat.map(v => v[2]));\n\n    return xs.map((_, i) => [xs[i], ys[i], zs[i]]);\n}\n\nexport function randInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min);\n}\n", "import { normalizeByColumn } from './utils';\n\nexport const T = [\n    ['\u0410\u0437\u0435\u0440\u0431\u0430\u0439\u0434\u0436\u0430\u043D', 28.2, 70.5],\n    ['\u0410\u0440\u043C\u0435\u043D\u0438\u044F', 17.1, 70.4],\n    ['\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C', 12.5, 70.3],\n    ['\u041A\u0430\u0437\u0430\u0445\u0441\u0442\u0430\u043D', 28.4, 68.6],\n    ['\u041A\u044B\u0440\u0433\u044B\u0437\u0441\u0442\u0430\u043D', 31.8, 68.8],\n    ['\u041C\u043E\u043B\u0434\u043E\u0432\u0430', 21.5, 67.7],\n    ['\u0420\u043E\u0441\u0441\u0438\u044F', 20, 69],\n    ['\u0422\u0430\u0434\u0436\u0438\u043A\u0438\u0441\u0442\u0430\u043D', 42.7, 70.5],\n    ['\u0422\u0443\u0440\u043A\u043C\u0435\u043D\u0438\u044F', 45.9, 65.3],\n    ['\u0423\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u0430\u043D', 35.6, 69.3],\n    ['\u0423\u043A\u0440\u0430\u0438\u043D\u0430', 14.9, 70.5],\n    ['\u0413\u0440\u0443\u0437\u0438\u044F', 18.3, 72.6],\n    ['\u041B\u0430\u0442\u0432\u0438\u044F', 15.9, 69.2],\n    ['\u041B\u0438\u0442\u0432\u0430', 15.2, 70.7],\n    ['\u042D\u0441\u0442\u043E\u043D\u0438\u044F', 15.7, 70],\n];\n\nexport const U = normalizeByColumn([\n    [71, 17.1, 12.2],\n    [72, 17, 12],\n    [74, 18, 13],\n    [76, 16.5, 10.5],\n    [75, 16.3, 11],\n    [70, 17.6, 12.8],\n    [73, 17.8, 13.1],\n    [75, 17.7, 13.2],\n    [72, 17.5, 13.4],\n    [76, 18, 13.5],\n]);\n\nconsole.log(U);\n", "export const Color = {\n    RED: (a = 0.8) => `rgba(255,65,54,${a})`,\n    GREEN: (a = 0.8) => `rgba(46,204,64,${a})`,\n    BLUE: (a = 0.8) => `rgba(0,116,217,${a})`,\n    GOLD: (a = 0.8) => `rgba(238,170,0,${a})`,\n    PURPLE: (a = 0.8) => `rgba(102,51,102,${a})`,\n    BLACK: (a = 0.8) => `rgba(0,0,0,${a})`,\n};\n", "import { M, V } from './utils';\n\nexport const kMeans = (data, k = 1, cb) => {\n    const centroids = data.slice(0, k);\n    const distances = M(data.length, k);\n    const classes = V(data.length, -1);\n    let itr = true;\n    let step = 0;\n\n    cb && cb(centroids.slice(), classes.slice(), step);\n\n    while (itr) {\n        itr = false;\n        step++;\n\n        for (let d in data) {\n            for (let c = 0; c < k; c++) {\n                distances[d][c] = Math.hypot(...Object.keys(data[0]).map(key => data[d][key] - centroids[c][key]));\n            }\n\n            const m = distances[d].indexOf(Math.min(...distances[d]));\n            if (classes[d] !== m) itr = true;\n            classes[d] = m;\n        }\n\n        for (let c = 0; c < k; c++) {\n            centroids[c] = V(data[0].length, 0);\n            const size = data.reduce((acc, _, d) => {\n                if (classes[d] === c) {\n                    acc++;\n                    for (let i in data[0]) centroids[c][i] += data[d][i];\n                }\n                return acc;\n            }, 0);\n\n            for (let i in data[0]) {\n                centroids[c][i] = centroids[c][i] / size;\n            }\n        }\n        cb && cb(centroids.slice(), classes.slice(), step);\n    }\n\n    return classes;\n};\n", "import Zdog from 'zdog';\n\nimport { Color } from './colors';\nimport { findLimits, unionLimits } from './utils';\n\nconst SIZE = 300;\n\nexport function drawPlot(element, data) {\n    const { minX, minY, minZ, maxX, maxY, maxZ } = unionLimits(findLimits(data[0].points), findLimits(data[1].points));\n    console.log({ minX, minY, minZ, maxX, maxY, maxZ });\n    const minCoord = Math.min(minX, minY, minZ);\n\n    const maxDiff = Math.max(maxX - minX, maxY - minY, maxZ - minZ);\n    console.log(maxDiff);\n\n    const proj = r => ((r - minCoord) * SIZE) / maxDiff;\n    console.log(proj(0.4));\n\n    const illo = new Zdog.Illustration({\n        element,\n        rotate: { y: Zdog.TAU / 8, x: -Zdog.TAU / 12, z: Zdog.TAU / 2 },\n        dragRotate: true,\n    });\n\n    new Zdog.Shape({\n        addTo: illo,\n        stroke: 2,\n        path: [{}, { x: SIZE }],\n        color: Color.RED(),\n    });\n\n    new Zdog.Shape({\n        addTo: illo,\n        stroke: 2,\n        path: [{}, { y: SIZE }],\n        color: Color.GREEN(),\n    });\n\n    new Zdog.Shape({\n        addTo: illo,\n        stroke: 2,\n        path: [{}, { z: SIZE }],\n        color: Color.BLUE(),\n    });\n\n    for (const set of data) {\n        for (const p of set.points) {\n            new Zdog.Shape({\n                addTo: illo,\n                stroke: proj(set.centerRadius * 2),\n                translate: { x: proj(p.x), y: proj(p.y), z: proj(p.z) },\n                color: set.centerColor,\n            });\n\n            if (set.color && set.radius) {\n                new Zdog.Shape({\n                    addTo: illo,\n                    stroke: proj(set.radius * 2),\n                    translate: { x: proj(p.x), y: proj(p.y), z: proj(p.z) },\n                    color: set.color,\n                });\n            }\n        }\n    }\n\n    function animate() {\n        illo.updateRenderGraph();\n        requestAnimationFrame(animate);\n    }\n    animate();\n\n    return illo;\n}\n", "import { randInt, avg } from './utils';\n\nconst EPS = 1e-9;\n\nconst eq = (a, b) => Math.max(...[a[0] - b[0], a[1] - b[1], a[2] - b[2]].map(Math.abs)) < EPS;\n\nconst getNeighbourObjects = (center, objects, r) =>\n    objects.filter(o => Math.hypot(o[0] - center[0], o[1] - center[1], o[2] - center[2]) <= r);\n\nfunction centerOfObjects(objects) {\n    const x = avg(objects.map(o => o[0]));\n    const y = avg(objects.map(o => o[1]));\n    const z = avg(objects.map(o => o[2]));\n    return [x || 0, y || 0, z || 0];\n}\n\nexport function forel(data, r, cb) {\n    let objects = data.slice();\n    let cores = [];\n\n    while (objects.length > 0) {\n        let currentObject = objects[randInt(0, objects.length)];\n        let neighbourObjects = getNeighbourObjects(currentObject, objects, r);\n        let centerObject = centerOfObjects(neighbourObjects);\n\n        while (!eq(centerObject, currentObject)) {\n            currentObject = centerObject;\n            neighbourObjects = getNeighbourObjects(currentObject, objects, r);\n            centerObject = centerOfObjects(neighbourObjects);\n        }\n\n        cb && cb(centerObject);\n        cores.push(centerObject);\n\n        objects = objects.filter(o => !neighbourObjects.some(n => eq(o, n)));\n    }\n\n    return cores.map(c => ({ x: c[0], y: c[1], z: c[2] }));\n}\n", "import rough from 'roughjs/bundled/rough.esm';\nimport { agnes } from 'ml-hclust';\n\nimport { T, U } from './data';\nimport { Color } from './colors';\nimport { minMax, createCanvas, avg, maxDepth, text, round } from './utils';\nimport { kMeans } from './kmeans';\nimport { drawPlot } from './plot';\nimport { forel } from './forel';\n\nconst SIZE = 800;\nconst OFFSET = 16;\nconst DELAY = 2000;\nconst SHOW_LABELS = false;\n\nconst [minX, maxX] = minMax(T.map(r => r[1]));\nconst [minY, maxY] = minMax(T.map(r => r[2]));\n\nconsole.log({ minX, maxX, minY, maxY });\n\nconst mx = x => OFFSET + ((x - minX) * SIZE) / (maxX - minX);\nconst my = x => SIZE + OFFSET - ((x - minY) * SIZE) / (maxY - minY);\n\nconst rmx = x => minX + ((x - OFFSET) * (maxX - minX)) / SIZE;\nconst rmy = x => minY + ((SIZE + OFFSET - x) * (maxY - minY)) / SIZE;\n\nfunction drawTree(rc, node, depth, maxDepth) {\n    for (const child of node.children) {\n        drawTree(rc, child, depth + 1, maxDepth);\n    }\n\n    if (node.index >= 0) {\n        const o = T[node.index];\n        node.x = mx(o[1]);\n        node.y = my(o[2]);\n        rc.circle(node.x, node.y, OFFSET, { fill: Color.BLUE(), stroke: Color.BLUE() });\n        if (SHOW_LABELS) text(rc.ctx, node.x, node.y, `${round(o[1])},${round(o[2])}`);\n    } else {\n        const cx = node.children.map(c => c.x);\n        const cy = node.children.map(c => c.y);\n        node.x = avg(cx);\n        node.y = avg(cy);\n\n        setTimeout(() => {\n            const alpha = (maxDepth - depth) / maxDepth;\n            rc.rectangle(node.x - OFFSET / 2, node.y - OFFSET / 2, OFFSET, OFFSET, {\n                fill: Color.RED(alpha),\n                stroke: Color.RED(alpha),\n            });\n            for (let i = 0; i < cx.length; i++) {\n                rc.line(node.x, node.y, cx[i], cy[i], { stroke: Color.BLACK(alpha * 0.5) });\n            }\n            if (SHOW_LABELS) text(rc.ctx, node.x, node.y, `${round(rmx(node.x))},${round(rmy(node.y))}`);\n        }, (maxDepth - depth) * DELAY);\n    }\n}\n\n// FAR\n\nconst root1 = agnes(\n    T.map(r => [r[1], r[2]]),\n    { method: 'complete' }\n);\nconst maxDepth1 = maxDepth(root1);\nconsole.log(root1, maxDepth1);\n\nconst rc1 = rough.canvas(createCanvas(SIZE + 2 * OFFSET));\nrc1.rectangle(OFFSET, OFFSET, SIZE, SIZE, { stroke: Color.BLACK(0.1) });\ndrawTree(rc1, root1, 0, maxDepth1);\n\n// NEAR\n\nconst root2 = agnes(\n    T.map(r => [r[1], r[2]]),\n    { method: 'single' }\n);\nconst maxDepth2 = maxDepth(root2);\nconsole.log(root2, maxDepth2);\n\nconst rc2 = rough.canvas(createCanvas(SIZE + 2 * OFFSET));\nrc2.rectangle(OFFSET, OFFSET, SIZE, SIZE, { stroke: Color.BLACK(0.1) });\ndrawTree(rc2, root2, 0, maxDepth2);\n\n// MEAN\n\nconst rc3 = rough.canvas(createCanvas(SIZE + 2 * OFFSET));\n\nkMeans(\n    T.map(r => [r[1], r[2]]),\n    5,\n    (centroids, classes, step) => {\n        setTimeout(() => {\n            rc3.ctx.clearRect(0, 0, OFFSET * 2 + SIZE, OFFSET * 2 + SIZE);\n            rc3.rectangle(OFFSET, OFFSET, SIZE, SIZE, { stroke: Color.BLACK(0.1) });\n            for (const r of T) {\n                const x = mx(r[1]);\n                const y = my(r[2]);\n                rc3.circle(x, y, OFFSET, { fill: Color.BLUE(), stroke: Color.BLUE() });\n                if (SHOW_LABELS) text(rc3.ctx, x, y, `${round(rmx(x))},${round(rmy(y))}`);\n            }\n\n            for (let j = 0; j < centroids.length; j++) {\n                const c = centroids[j];\n                const x = mx(c[0]);\n                const y = my(c[1]);\n\n                rc3.rectangle(x - OFFSET / 2, y - OFFSET / 2, OFFSET, OFFSET, {\n                    fill: Color.RED(),\n                    stroke: Color.RED(),\n                });\n\n                for (let i = 0; i < classes.length; i++) {\n                    if (classes[i] !== j) continue;\n                    const o = T[i];\n                    rc3.line(mx(o[1]), my(o[2]), x, y, { stroke: Color.GOLD(0.4) });\n                }\n                if (SHOW_LABELS) text(rc3.ctx, x, y, `${round(rmx(x))},${round(rmy(y))}`);\n            }\n        }, DELAY * step);\n    }\n);\n\n// \u0417\u0430\u0434\u0430\u043D\u0438\u0435 2\n\nconst radius = 0.3;\nconst points = U.map(p => ({ x: p[0], y: p[1], z: p[2] }));\nconst cores = forel(U, radius);\nconsole.log(cores);\n\ndrawPlot(createCanvas(SIZE + 2 * OFFSET), [\n    {\n        points,\n        centerColor: Color.BLUE(0.5),\n        centerRadius: 0.01,\n    },\n    {\n        points: cores,\n        radius,\n        color: Color.GOLD(0.2),\n        centerColor: Color.RED(1),\n        centerRadius: 0.01,\n    },\n]);\n"],
  "mappings": "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",
  "names": []
}
